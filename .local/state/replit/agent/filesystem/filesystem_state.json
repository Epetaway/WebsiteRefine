{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"pyproject.toml":{"content":"[project]\nname = \"repl-nix-workspace\"\nversion = \"0.1.0\"\ndescription = \"Add your description here\"\nrequires-python = \">=3.11\"\ndependencies = [\n    \"instaloader>=4.14.2\",\n    \"requests>=2.32.4\",\n]\n","size_bytes":195},"replit.md":{"content":"# Overview\n\nThis is a professional portfolio website for Earl Hickson Jr., a Senior Front-End Developer based in Parsippany, New Jersey. The application showcases case studies, blog posts, professional experience, and provides contact functionality. It also features a unique section for Brazilian Jiu-Jitsu lesson bookings at /EarldKaiju, reflecting Earl's expertise as a BJJ black belt. The site includes automatic content fetching from social media (@earld.kaiju Instagram and @earldkaiju YouTube) and is built with modern web technologies following accessibility standards (WCAG).\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and component-based development\n- **Routing**: Wouter for lightweight client-side routing\n- **Styling**: Tailwind CSS with custom design system using shadcn/ui components\n- **State Management**: TanStack React Query for server state management and caching\n- **Form Handling**: React Hook Form with Zod validation for type-safe form processing\n- **Build Tool**: Vite for fast development and optimized production builds\n\n## Backend Architecture\n- **Framework**: Express.js with TypeScript for the API server\n- **Database ORM**: Drizzle ORM for type-safe database operations\n- **Database**: PostgreSQL (using Neon serverless driver)\n- **Session Storage**: In-memory storage for development, with PostgreSQL session store capability\n- **API Design**: RESTful endpoints for contact forms and BJJ booking submissions\n\n## Data Storage Solutions\n- **Primary Database**: PostgreSQL with four main tables:\n  - Users table for authentication (currently unused but available)\n  - Contacts table for general contact form submissions\n  - BJJ bookings table for lesson booking requests\n  - Social media posts table for automatic content from Instagram and YouTube\n- **In-Memory Storage**: Used for development with automatic content fetching and caching\n- **Schema Management**: Drizzle Kit for database migrations and schema changes\n- **Validation**: Zod schemas shared between client and server for consistent data validation\n\n## Authentication and Authorization\n- Basic user authentication schema is implemented but not currently active\n- Session management infrastructure is in place using connect-pg-simple\n- Current implementation focuses on form submissions without user authentication requirements\n\n## Development and Build Process\n- **Development**: Concurrent client and server development with hot reloading\n- **Build**: Vite builds the client, esbuild bundles the server\n- **Type Checking**: Shared TypeScript configuration across client, server, and shared modules\n- **Code Organization**: Monorepo structure with clear separation of concerns\n\n## Design System Integration\n- shadcn/ui component library for consistent UI patterns\n- Custom Tailwind configuration with design tokens\n- Responsive design with mobile-first approach\n- Dark mode support infrastructure (not currently activated)\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL hosting\n- **Drizzle ORM**: Type-safe database operations and migrations\n\n## UI and Styling\n- **Tailwind CSS**: Utility-first CSS framework\n- **shadcn/ui**: React component library built on Radix UI primitives\n- **Radix UI**: Unstyled, accessible UI primitives\n- **Lucide React**: Icon library for consistent iconography\n\n## Development Tools\n- **Vite**: Build tool and development server\n- **TypeScript**: Static type checking\n- **ESBuild**: Fast JavaScript bundler for production server builds\n- **React Query**: Server state management and caching\n\n## External APIs and Services\n- **SendGrid**: Email service integration for contact forms and notifications\n- **Google Analytics**: Website analytics tracking with GDPR considerations\n- **YouTube Data API v3**: Automatic content fetching from @earldkaiju channel\n- **Threads API**: Instagram content integration for @earld.kaiju (App ID/Secret configured, requires OAuth access token)\n- **Font Services**: Google Fonts for typography (Inter and JetBrains Mono)\n- **Custom SVG Icons**: Modern icon system with proper play buttons and social media indicators\n\n## Automatic Content System (Added August 2025)\n- **YouTube Integration**: Fully functional, automatically fetches latest 7 videos every 5 minutes\n- **Instagram Integration**: Threads API App ID/Secret configured, needs OAuth flow to get access token\n- **Auto-refresh**: Content updates automatically without manual intervention\n- **Responsive Gallery**: Beautiful grid layout with hover effects and proper play buttons\n- **Error Handling**: Graceful fallbacks and status messages for each platform\n\n## Hosting and Deployment\n- **Replit**: Development and hosting platform with specific plugins and configurations\n- **Static Assets**: Served through Express with proper caching headers\n\n## Third-Party Libraries\n- **React Hook Form**: Form state management and validation\n- **Zod**: Runtime type validation and schema definition\n- **date-fns**: Date manipulation and formatting utilities\n- **clsx & Tailwind Merge**: Utility for conditional CSS class names","size_bytes":5214},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\"\n\nconst config: Config = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{ts,tsx}',\n    './components/**/*.{ts,tsx}',\n    './app/**/*.{ts,tsx}',\n    './src/**/*.{ts,tsx}',\n  ],\n  prefix: \"\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config","size_bytes":2188},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"client/env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_GA_MEASUREMENT_ID: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}","size_bytes":166},"scripts/bjj_comp_scraper.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nBJJ Competition Result Scraper for Earl D Hickson Jr\nSearches SmoothComp and IBJJF for competition results\n\"\"\"\n\nimport requests\nimport json\nimport sys\nfrom datetime import datetime\nimport time\n\ndef search_smoothcomp_results(name, limit=10):\n    \"\"\"\n    Search SmoothComp for competition results\n    Note: This is a placeholder implementation - SmoothComp requires specific event IDs\n    \"\"\"\n    try:\n        # SmoothComp doesn't have a public search API for competitor results\n        # Would need event-specific API endpoints or web scraping\n        print(f\"Searching SmoothComp for: {name}\")\n        \n        # Placeholder for actual implementation\n        sample_results = [\n            {\n                \"tournament\": \"IBJJF New York Spring International Open\",\n                \"date\": \"2024-03-15\",\n                \"division\": \"Adult Black Belt Middleweight\",\n                \"placement\": \"2nd Place\",\n                \"source\": \"smoothcomp\",\n                \"medals\": [\"Silver\"]\n            },\n            {\n                \"tournament\": \"NAGA New Jersey\",\n                \"date\": \"2024-01-20\", \n                \"division\": \"Expert Gi 185lbs\",\n                \"placement\": \"1st Place\",\n                \"source\": \"smoothcomp\",\n                \"medals\": [\"Gold\"]\n            }\n        ]\n        \n        return {\n            \"success\": True,\n            \"results\": sample_results[:limit],\n            \"note\": \"Sample data - actual SmoothComp integration requires event-specific API access\"\n        }\n        \n    except Exception as e:\n        return {\n            \"success\": False,\n            \"error\": str(e),\n            \"results\": []\n        }\n\ndef search_ibjjf_results(name, limit=10):\n    \"\"\"\n    Search IBJJF for competition results\n    Note: IBJJF doesn't have a public API for competitor search\n    \"\"\"\n    try:\n        # IBJJF doesn't provide a public API for competitor results\n        print(f\"Searching IBJJF for: {name}\")\n        \n        # Would require web scraping their tournament result pages\n        # This is a placeholder for the structure\n        sample_results = [\n            {\n                \"tournament\": \"IBJJF World Championship\",\n                \"date\": \"2023-06-10\",\n                \"division\": \"Black Belt Adult Middle\",\n                \"placement\": \"Participated\",\n                \"source\": \"ibjjf\", \n                \"medals\": []\n            }\n        ]\n        \n        return {\n            \"success\": True,\n            \"results\": sample_results[:limit],\n            \"note\": \"Sample data - actual IBJJF integration requires web scraping or unofficial APIs\"\n        }\n        \n    except Exception as e:\n        return {\n            \"success\": False,\n            \"error\": str(e),\n            \"results\": []\n        }\n\ndef get_competition_results(name, limit=5):\n    \"\"\"\n    Get competition results from multiple sources\n    \"\"\"\n    all_results = []\n    \n    # Search SmoothComp\n    smoothcomp_data = search_smoothcomp_results(name, limit)\n    if smoothcomp_data[\"success\"]:\n        all_results.extend(smoothcomp_data[\"results\"])\n    \n    # Search IBJJF  \n    ibjjf_data = search_ibjjf_results(name, limit)\n    if ibjjf_data[\"success\"]:\n        all_results.extend(ibjjf_data[\"results\"])\n    \n    # Sort by date (newest first)\n    all_results.sort(key=lambda x: x[\"date\"], reverse=True)\n    \n    return {\n        \"success\": True,\n        \"results\": all_results[:limit],\n        \"sources_checked\": [\"smoothcomp\", \"ibjjf\"],\n        \"note\": \"Competition result tracking requires specialized APIs or web scraping setup\"\n    }\n\nif __name__ == \"__main__\":\n    name = sys.argv[1] if len(sys.argv) > 1 else \"Earl D Hickson Jr\"\n    limit = int(sys.argv[2]) if len(sys.argv) > 2 else 5\n    \n    result = get_competition_results(name, limit)\n    print(json.dumps(result, indent=2))","size_bytes":3830},"scripts/instagram_scraper.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nInstagram scraper for @earld.kaiju using instaloader\nScrapes public posts without requiring OAuth or login\n\"\"\"\n\nimport instaloader\nimport json\nimport sys\nfrom datetime import datetime\nimport os\n\ndef scrape_instagram_posts(username, limit=10):\n    \"\"\"\n    Scrape public Instagram posts from a username\n    Returns list of post data in format compatible with our database\n    \"\"\"\n    try:\n        # Create instaloader instance with minimal settings to avoid detection\n        L = instaloader.Instaloader(\n            download_video_thumbnails=False,\n            download_geotags=False,\n            download_comments=False,\n            save_metadata=False,\n            compress_json=False,\n            quiet=True,  # Reduce output\n        )\n        \n        # Add some delay to avoid rate limiting\n        import time\n        time.sleep(2)\n        \n        # Get profile\n        profile = instaloader.Profile.from_username(L.context, username)\n        \n        posts = []\n        count = 0\n        \n        # Iterate through posts\n        for post in profile.get_posts():\n            if count >= limit:\n                break\n                \n            # Extract post data\n            post_data = {\n                \"platform\": \"instagram\",\n                \"postId\": post.shortcode,\n                \"mediaType\": \"video\" if post.is_video else \"image\",\n                \"mediaUrl\": post.video_url if post.is_video else post.url,\n                \"thumbnailUrl\": post.url,  # Use image URL as thumbnail\n                \"caption\": post.caption or \"\",\n                \"permalink\": f\"https://www.instagram.com/p/{post.shortcode}/\",\n                \"timestamp\": post.date_utc.isoformat()\n            }\n            \n            posts.append(post_data)\n            count += 1\n            \n        return {\n            \"success\": True,\n            \"posts\": posts,\n            \"profile\": {\n                \"username\": profile.username,\n                \"followers\": profile.followers,\n                \"posts_count\": profile.mediacount\n            }\n        }\n        \n    except Exception as e:\n        return {\n            \"success\": False,\n            \"error\": str(e),\n            \"posts\": []\n        }\n\nif __name__ == \"__main__\":\n    username = sys.argv[1] if len(sys.argv) > 1 else \"earld.kaiju\"\n    limit = int(sys.argv[2]) if len(sys.argv) > 2 else 7\n    \n    result = scrape_instagram_posts(username, limit)\n    print(json.dumps(result, indent=2))","size_bytes":2464},"scripts/simple_instagram_scraper.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nSimple Instagram scraper using requests to get public data\nFallback method when instaloader fails due to rate limits\n\"\"\"\n\nimport requests\nimport json\nimport sys\nfrom datetime import datetime\nimport re\nimport time\n\ndef get_user_posts_simple(username, limit=7):\n    \"\"\"\n    Get Instagram posts using public endpoints\n    This is a more basic approach that's less likely to be blocked\n    \"\"\"\n    try:\n        # Add delay to avoid being flagged\n        time.sleep(1)\n        \n        # Try the basic profile endpoint first\n        headers = {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n        }\n        \n        # Get the Instagram page HTML\n        profile_url = f\"https://www.instagram.com/{username}/\"\n        response = requests.get(profile_url, headers=headers, timeout=10)\n        \n        if response.status_code != 200:\n            return {\n                \"success\": False,\n                \"error\": f\"Failed to access Instagram profile: {response.status_code}\",\n                \"posts\": []\n            }\n        \n        # Parse the HTML to extract post data\n        # Look for the JSON data embedded in the page\n        import re\n        \n        # Try to find the shared data in the page\n        pattern = r'window\\._sharedData\\s*=\\s*({.*?});'\n        match = re.search(pattern, response.text)\n        \n        if match:\n            try:\n                shared_data = json.loads(match.group(1))\n                user_data = shared_data.get('entry_data', {}).get('ProfilePage', [{}])[0]\n                user_info = user_data.get('graphql', {}).get('user', {})\n                \n                posts = []\n                edges = user_info.get('edge_owner_to_timeline_media', {}).get('edges', [])\n                \n                for edge in edges[:limit]:\n                    node = edge.get('node', {})\n                    \n                    post_data = {\n                        \"platform\": \"instagram\",\n                        \"postId\": node.get('shortcode', ''),\n                        \"mediaType\": \"video\" if node.get('is_video', False) else \"image\",\n                        \"mediaUrl\": node.get('video_url') or node.get('display_url', ''),\n                        \"thumbnailUrl\": node.get('display_url', ''),\n                        \"caption\": node.get('edge_media_to_caption', {}).get('edges', [{}])[0].get('node', {}).get('text', ''),\n                        \"permalink\": f\"https://www.instagram.com/p/{node.get('shortcode', '')}/\",\n                        \"timestamp\": datetime.fromtimestamp(node.get('taken_at_timestamp', 0)).isoformat()\n                    }\n                    posts.append(post_data)\n                \n                return {\n                    \"success\": True,\n                    \"posts\": posts,\n                    \"profile\": {\n                        \"username\": username,\n                        \"followers\": user_info.get('edge_followed_by', {}).get('count', 0),\n                        \"posts_count\": user_info.get('edge_owner_to_timeline_media', {}).get('count', 0)\n                    }\n                }\n                \n            except json.JSONDecodeError:\n                pass\n        \n        # If parsing fails, return error instead of mock data\n        return {\n            \"success\": False,\n            \"error\": \"Instagram has updated their page structure. Unable to extract post data without proper API access.\",\n            \"posts\": []\n        }\n        \n    except Exception as e:\n        return {\n            \"success\": False,\n            \"error\": str(e),\n            \"posts\": []\n        }\n\nif __name__ == \"__main__\":\n    username = sys.argv[1] if len(sys.argv) > 1 else \"earld.kaiju\"\n    limit = int(sys.argv[2]) if len(sys.argv) > 2 else 7\n    \n    result = get_user_posts_simple(username, limit)\n    print(json.dumps(result, indent=2))","size_bytes":3930},"server/index.ts":{"content":"import express from 'express';\nimport { join, dirname } from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __dirname = dirname(fileURLToPath(import.meta.url));\nconst app = express();\nconst PORT = parseInt(process.env.PORT || '3000', 10);\n\n// Middleware for parsing JSON\napp.use(express.json());\n\n// Serve Next.js static files\napp.use(express.static(join(__dirname, '../.next/static')));\n\n// API routes can be added here\napp.get('/api/health', (req, res) => {\n  res.json({ status: 'OK', timestamp: new Date().toISOString() });\n});\n\n// Catch all handler for Next.js pages\napp.get('*', (req, res) => {\n  // For now, just redirect to root\n  // In a proper setup, this would be handled by Next.js\n  res.redirect('/');\n});\n\napp.listen(PORT, '0.0.0.0', () => {\n  console.log(`Server running on http://0.0.0.0:${PORT}`);\n});","size_bytes":822},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactSchema, insertBjjBookingSchema, insertSocialMediaPostSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport sgMail from '@sendgrid/mail';\nimport path from 'path';\nimport fs from 'fs';\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Initialize SendGrid\n  if (process.env.SENDGRID_API_KEY) {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n  }\n  // OAuth Routes for Threads API\n  app.get(\"/api/auth/threads/connect\", (req, res) => {\n    const clientId = process.env.THREADS_APP_ID;\n    const redirectUri = `${req.protocol}://${req.get('host')}/api/auth/threads/callback`;\n    \n    if (!clientId) {\n      return res.status(500).json({ error: 'Threads App ID not configured' });\n    }\n\n    const authUrl = `https://threads.net/oauth/authorize?` +\n      `client_id=${clientId}&` +\n      `redirect_uri=${encodeURIComponent(redirectUri)}&` +\n      `scope=threads_basic&` +\n      `response_type=code`;\n\n    res.redirect(authUrl);\n  });\n\n  app.get(\"/api/auth/threads/callback\", async (req, res) => {\n    const { code, error } = req.query;\n    \n    if (error) {\n      return res.redirect('/EarldKaiju?error=access_denied');\n    }\n\n    if (!code) {\n      return res.redirect('/EarldKaiju?error=no_code');\n    }\n\n    try {\n      const clientId = process.env.THREADS_APP_ID;\n      const clientSecret = process.env.THREADS_APP_SECRET;\n      const redirectUri = `${req.protocol}://${req.get('host')}/api/auth/threads/callback`;\n\n      // Exchange code for short-lived token\n      const tokenResponse = await fetch('https://graph.threads.net/oauth/access_token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          client_id: clientId!,\n          client_secret: clientSecret!,\n          grant_type: 'authorization_code',\n          redirect_uri: redirectUri,\n          code: code as string,\n        }),\n      });\n\n      const tokenData = await tokenResponse.json();\n      \n      if (!tokenResponse.ok) {\n        console.error('Token exchange error:', tokenData);\n        return res.redirect('/EarldKaiju?error=token_exchange_failed');\n      }\n\n      // Exchange for long-lived token (60 days)\n      const longLivedResponse = await fetch(`https://graph.threads.net/access_token?` +\n        `grant_type=th_exchange_token&` +\n        `client_secret=${clientSecret}&` +\n        `access_token=${tokenData.access_token}`\n      );\n\n      const longLivedData = await longLivedResponse.json();\n\n      if (!longLivedResponse.ok) {\n        console.error('Long-lived token error:', longLivedData);\n        return res.redirect('/EarldKaiju?error=long_token_failed');\n      }\n\n      // Store the long-lived token (in a real app, you'd save this securely)\n      process.env.THREADS_ACCESS_TOKEN = longLivedData.access_token;\n      process.env.THREADS_USER_ID = tokenData.user_id;\n\n      console.log('Threads OAuth successful! Token expires in:', longLivedData.expires_in, 'seconds');\n      \n      res.redirect('/EarldKaiju?success=instagram_connected');\n    } catch (error) {\n      console.error('OAuth callback error:', error);\n      res.redirect('/EarldKaiju?error=oauth_failed');\n    }\n  });\n\n  app.get(\"/api/auth/threads/status\", (req, res) => {\n    const hasToken = !!process.env.THREADS_ACCESS_TOKEN;\n    res.json({ \n      connected: hasToken,\n      user_id: process.env.THREADS_USER_ID || null\n    });\n  });\n\n  // Contact form submission\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const validatedData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContact(validatedData);\n      res.json({ message: \"Contact form submitted successfully\", id: contact.id });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ message: \"Invalid form data\", errors: error.errors });\n      } else {\n        console.error(\"Contact form error:\", error);\n        res.status(500).json({ message: \"Failed to submit contact form\" });\n      }\n    }\n  });\n\n  // BJJ booking form submission\n  app.post(\"/api/bjj-booking\", async (req, res) => {\n    try {\n      const validatedData = insertBjjBookingSchema.parse(req.body);\n      const booking = await storage.createBjjBooking(validatedData);\n      \n      // Send email notification if SendGrid is configured\n      if (process.env.SENDGRID_API_KEY) {\n        try {\n          const msg = {\n            to: 'e@ehicksonjr.com',\n            from: 'e@ehicksonjr.com', // Must be verified sender in SendGrid\n            subject: `New BJJ Lesson Booking Request from ${validatedData.name}`,\n            text: `\nNew BJJ lesson booking request received:\n\nName: ${validatedData.name}\nEmail: ${validatedData.email}\nPhone: ${validatedData.phone}\nProgram: ${validatedData.program || 'Not specified'}\nGoals: ${validatedData.goals || 'Not specified'}\nAvailability: ${validatedData.availability || 'Not specified'}\nSMS Consent: ${validatedData.smsConsent ? 'Yes' : 'No'}\n\nPlease follow up within 24 hours.\n            `,\n            html: `\n<h2>New BJJ Lesson Booking Request</h2>\n<p><strong>A new student is interested in training!</strong></p>\n\n<h3>Contact Information:</h3>\n<ul>\n  <li><strong>Name:</strong> ${validatedData.name}</li>\n  <li><strong>Email:</strong> ${validatedData.email}</li>\n  <li><strong>Phone:</strong> ${validatedData.phone}</li>\n</ul>\n\n<h3>Training Details:</h3>\n<ul>\n  <li><strong>Program:</strong> ${validatedData.program || 'Not specified'}</li>\n  <li><strong>Goals:</strong> ${validatedData.goals || 'Not specified'}</li>\n  <li><strong>Availability:</strong> ${validatedData.availability || 'Not specified'}</li>\n  <li><strong>SMS Consent:</strong> ${validatedData.smsConsent ? 'Yes' : 'No'}</li>\n</ul>\n\n<p><em>Please follow up within 24 hours.</em></p>\n            `\n          };\n          \n          await sgMail.send(msg);\n          console.log('Booking notification email sent successfully');\n        } catch (emailError) {\n          console.error('Failed to send booking notification email:', emailError);\n          // Don't fail the booking if email fails\n        }\n      } else {\n        console.warn('SendGrid API key not configured - booking notification email not sent');\n      }\n      \n      res.json({ message: \"BJJ lesson booking submitted successfully\", id: booking.id });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ message: \"Invalid booking data\", errors: error.errors });\n      } else {\n        console.error(\"BJJ booking error:\", error);\n        res.status(500).json({ message: \"Failed to submit booking request\" });\n      }\n    }\n  });\n\n  // Get social media posts\n  app.get(\"/api/social-media\", async (req, res) => {\n    try {\n      const platform = req.query.platform as string | undefined;\n      const posts = await storage.getSocialMediaPosts(platform);\n      res.json({ posts });\n    } catch (error) {\n      console.error(\"Error fetching social media posts:\", error);\n      res.status(500).json({ message: \"Failed to fetch social media posts\" });\n    }\n  });\n\n  // Fetch Instagram posts using public scraping\n  app.post(\"/api/social-media/fetch-instagram\", async (req, res) => {\n    try {\n      // Use Python scraper for public Instagram posts\n      const { spawn } = await import('child_process');\n      const path = await import('path');\n      \n      const username = 'earld.kaiju'; // Your Instagram username\n      const limit = 7; // Number of posts to fetch\n      \n      // Try simple scraper first, fallback to instaloader if needed\n      const scriptPath = path.default.join(process.cwd(), 'scripts', 'simple_instagram_scraper.py');\n      const pythonProcess = spawn('python3', [scriptPath, username, limit.toString()]);\n      \n      let output = '';\n      let errorOutput = '';\n      \n      pythonProcess.stdout.on('data', (data) => {\n        output += data.toString();\n      });\n      \n      pythonProcess.stderr.on('data', (data) => {\n        errorOutput += data.toString();\n      });\n      \n      pythonProcess.on('close', async (code) => {\n        try {\n          if (code !== 0) {\n            console.error('Instagram scraper error:', errorOutput);\n            return res.status(500).json({ \n              message: `Instagram scraper failed with code ${code}: ${errorOutput}` \n            });\n          }\n          \n          const result = JSON.parse(output);\n          \n          if (!result.success) {\n            return res.status(400).json({ \n              message: `Instagram scraping failed: ${result.error}` \n            });\n          }\n          \n          const posts = [];\n          \n          for (const item of result.posts || []) {\n            try {\n              // Check if post already exists\n              const existingPosts = await storage.getSocialMediaPosts('instagram');\n              const exists = existingPosts.some(p => p.postId === item.postId);\n              \n              if (!exists) {\n                const post = await storage.createSocialMediaPost({\n                  platform: 'instagram',\n                  postId: item.postId,\n                  mediaType: item.mediaType,\n                  mediaUrl: item.mediaUrl,\n                  thumbnailUrl: item.thumbnailUrl,\n                  caption: item.caption,\n                  permalink: item.permalink,\n                  timestamp: new Date(item.timestamp)\n                });\n                posts.push(post);\n              }\n            } catch (error) {\n              console.error(`Error processing Instagram post ${item.postId}:`, error);\n            }\n          }\n          \n          res.json({ \n            message: `Successfully fetched ${posts.length} new Instagram posts from @${username}`,\n            posts: posts,\n            profile: result.profile\n          });\n          \n        } catch (parseError) {\n          console.error('Error parsing scraper output:', parseError);\n          console.error('Raw output:', output);\n          res.status(500).json({ \n            message: \"Failed to parse Instagram scraper output\" \n          });\n        }\n      });\n      \n    } catch (error) {\n      console.error(\"Instagram scraping error:\", error);\n      res.status(500).json({ message: \"Failed to fetch Instagram posts\" });\n    }\n  });\n\n  // Fetch YouTube videos automatically\n  app.post(\"/api/social-media/fetch-youtube\", async (req, res) => {\n    try {\n      const apiKey = process.env.YOUTUBE_API_KEY;\n      if (!apiKey) {\n        return res.status(400).json({ \n          message: \"YouTube API key not configured. Please set YOUTUBE_API_KEY environment variable.\" \n        });\n      }\n\n      const channelId = process.env.YOUTUBE_CHANNEL_ID || 'UCYourChannelId'; // Replace with actual channel ID\n      \n      // Fetch from YouTube Data API v3\n      const response = await fetch(\n        `https://www.googleapis.com/youtube/v3/search?key=${apiKey}&channelId=${channelId}&part=snippet&order=date&maxResults=10&type=video`\n      );\n      \n      if (!response.ok) {\n        throw new Error(`YouTube API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const posts = [];\n\n      for (const item of data.items || []) {\n        try {\n          // Check if video already exists\n          const existingPosts = await storage.getSocialMediaPosts('youtube');\n          const exists = existingPosts.some(p => p.postId === item.id.videoId);\n          \n          if (!exists) {\n            const post = await storage.createSocialMediaPost({\n              platform: 'youtube',\n              postId: item.id.videoId,\n              mediaType: 'video',\n              mediaUrl: `https://www.youtube.com/watch?v=${item.id.videoId}`,\n              thumbnailUrl: item.snippet.thumbnails?.high?.url || item.snippet.thumbnails?.default?.url,\n              caption: item.snippet.description || '',\n              permalink: `https://www.youtube.com/watch?v=${item.id.videoId}`,\n              timestamp: new Date(item.snippet.publishedAt)\n            });\n            posts.push(post);\n          }\n        } catch (error) {\n          console.error(`Error processing YouTube video ${item.id.videoId}:`, error);\n        }\n      }\n\n      res.json({ \n        message: `Successfully fetched ${posts.length} new YouTube videos`,\n        newPosts: posts.length,\n        posts\n      });\n    } catch (error) {\n      console.error(\"YouTube fetch error:\", error);\n      res.status(500).json({ message: \"Failed to fetch YouTube videos\" });\n    }\n  });\n\n  // Resume download endpoint\n  app.get(\"/api/resume\", (req, res) => {\n    // For now, redirect to download the DOCX version since it's already available\n    // In production, this should be converted to PDF\n    const resumePath = path.join(process.cwd(), 'attached_assets', 'Earl_Hickson_Resume_2025_Optimized_1754964295675.docx');\n    \n    if (fs.existsSync(resumePath)) {\n      res.setHeader('Content-Disposition', 'attachment; filename=\"Earl_Hickson_Resume_2025.docx\"');\n      res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document');\n      res.sendFile(resumePath);\n    } else {\n      res.status(404).json({ \n        error: \"Resume file not found\",\n        message: \"Please contact e@ehicksonjr.com for the latest resume\"\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":13504},"server/storage.ts":{"content":"import { type User, type InsertUser, type Contact, type InsertContact, type BjjBooking, type InsertBjjBooking, type SocialMediaPost, type InsertSocialMediaPost } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createContact(contact: InsertContact): Promise<Contact>;\n  createBjjBooking(booking: InsertBjjBooking): Promise<BjjBooking>;\n  getContacts(): Promise<Contact[]>;\n  getBjjBookings(): Promise<BjjBooking[]>;\n  createSocialMediaPost(post: InsertSocialMediaPost): Promise<SocialMediaPost>;\n  getSocialMediaPosts(platform?: string): Promise<SocialMediaPost[]>;\n  updateSocialMediaPost(postId: string, post: Partial<SocialMediaPost>): Promise<SocialMediaPost | undefined>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contacts: Map<string, Contact>;\n  private bjjBookings: Map<string, BjjBooking>;\n  private socialMediaPosts: Map<number, SocialMediaPost>;\n  private postIdCounter: number;\n\n  constructor() {\n    this.users = new Map();\n    this.contacts = new Map();\n    this.bjjBookings = new Map();\n    this.socialMediaPosts = new Map();\n    this.postIdCounter = 1;\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = { \n      ...insertContact, \n      id, \n      createdAt: new Date() \n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async createBjjBooking(insertBooking: InsertBjjBooking): Promise<BjjBooking> {\n    const id = randomUUID();\n    const booking: BjjBooking = { \n      ...insertBooking, \n      id, \n      createdAt: new Date() \n    };\n    this.bjjBookings.set(id, booking);\n    return booking;\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values());\n  }\n\n  async getBjjBookings(): Promise<BjjBooking[]> {\n    return Array.from(this.bjjBookings.values());\n  }\n\n  async createSocialMediaPost(insertPost: InsertSocialMediaPost): Promise<SocialMediaPost> {\n    const id = this.postIdCounter++;\n    const post: SocialMediaPost = { \n      ...insertPost, \n      id, \n      createdAt: new Date() \n    };\n    this.socialMediaPosts.set(id, post);\n    return post;\n  }\n\n  async getSocialMediaPosts(platform?: string): Promise<SocialMediaPost[]> {\n    const posts = Array.from(this.socialMediaPosts.values());\n    if (platform) {\n      return posts.filter(post => post.platform === platform);\n    }\n    return posts.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n  }\n\n  async updateSocialMediaPost(postId: string, updates: Partial<SocialMediaPost>): Promise<SocialMediaPost | undefined> {\n    const posts = Array.from(this.socialMediaPosts.entries());\n    const postEntry = posts.find(([_, post]) => post.postId === postId);\n    if (postEntry) {\n      const [id, post] = postEntry;\n      const updatedPost = { ...post, ...updates };\n      this.socialMediaPosts.set(id, updatedPost);\n      return updatedPost;\n    }\n    return undefined;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":3687},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean, serial } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  message: text(\"message\"),\n  type: text(\"type\").notNull().default(\"general\"), // 'general', 'bjj_booking'\n  smsConsent: boolean(\"sms_consent\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const bjjBookings = pgTable(\"bjj_bookings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  program: text(\"program\").notNull(),\n  goals: text(\"goals\"),\n  availability: text(\"availability\"),\n  smsConsent: boolean(\"sms_consent\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Social media content table for automatic feeds\nexport const socialMediaPosts = pgTable(\"social_media_posts\", {\n  id: serial(\"id\").primaryKey(),\n  platform: text(\"platform\").notNull(), // 'instagram' or 'youtube'\n  postId: text(\"post_id\").notNull().unique(),\n  mediaType: text(\"media_type\").notNull(), // 'video', 'image', 'carousel'\n  mediaUrl: text(\"media_url\"),\n  thumbnailUrl: text(\"thumbnail_url\"),\n  caption: text(\"caption\"),\n  permalink: text(\"permalink\").notNull(),\n  timestamp: timestamp(\"timestamp\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertBjjBookingSchema = createInsertSchema(bjjBookings).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertSocialMediaPostSchema = createInsertSchema(socialMediaPosts).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Contact = typeof contacts.$inferSelect;\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type BjjBooking = typeof bjjBookings.$inferSelect;\nexport type InsertBjjBooking = z.infer<typeof insertBjjBookingSchema>;\nexport type SocialMediaPost = typeof socialMediaPosts.$inferSelect;\nexport type InsertSocialMediaPost = z.infer<typeof insertSocialMediaPostSchema>;\n","size_bytes":2770},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useEffect } from \"react\";\nimport { initGA } from \"./lib/analytics\";\nimport { useAnalytics } from \"./hooks/use-analytics\";\n\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport Home from \"@/pages/home\";\nimport CaseStudies from \"@/pages/case-studies\";\nimport About from \"@/pages/about\";\nimport Blog from \"@/pages/blog\";\nimport EarldKaiju from \"@/pages/earldkaiju\";\nimport Article from \"@/pages/article\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  useAnalytics();\n  \n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/case-studies\" component={CaseStudies} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/blog\" component={Blog} />\n          <Route path=\"/earldkaiju\" component={EarldKaiju} />\n          <Route path=\"/articles/:slug\" component={Article} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    if (!import.meta.env.VITE_GA_MEASUREMENT_ID) {\n      console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    } else {\n      initGA();\n    }\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Router />\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1800},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(210, 25%, 7.8431%);\n  --card: hsl(180, 6.6667%, 97.0588%);\n  --card-foreground: hsl(210, 25%, 7.8431%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(210, 25%, 7.8431%);\n  --primary: hsl(203.8863, 88.2845%, 53.1373%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(210, 25%, 7.8431%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 1.9608%, 90%);\n  --muted-foreground: hsl(210, 25%, 7.8431%);\n  --accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --accent-foreground: hsl(203.8863, 88.2845%, 53.1373%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(201.4286, 30.4348%, 90.9804%);\n  --input: hsl(200, 23.0769%, 97.4510%);\n  --ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --chart-1: hsl(203.8863, 88.2845%, 53.1373%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(180, 6.6667%, 97.0588%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(203.8863, 88.2845%, 53.1373%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863, 88.2845%, 53.1373%);\n  --sidebar-border: hsl(205.0000, 25.0000%, 90.5882%);\n  --sidebar-ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --font-sans: Inter, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'JetBrains Mono', Courier New, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n  \n  /* Custom design colors from reference */\n  --blue-50: hsl(214, 100%, 97%);\n  --blue-100: hsl(214, 95%, 93%);\n  --blue-500: hsl(217, 91%, 60%);\n  --blue-600: hsl(221, 83%, 53%);\n  --purple-50: hsl(270, 100%, 98%);\n  --purple-100: hsl(269, 100%, 95%);\n  --purple-500: hsl(258, 90%, 66%);\n  --purple-600: hsl(262, 83%, 58%);\n  --green-50: hsl(138, 76%, 97%);\n  --green-100: hsl(141, 84%, 93%);\n  --green-500: hsl(142, 71%, 45%);\n  --green-600: hsl(142, 76%, 36%);\n  \n  /* Earl the Kaiju Brand Colors */\n  --kaiju-primary: hsl(140, 62%, 27%); /* #1B7339 */\n  --kaiju-primary-light: hsl(140, 62%, 35%);\n  --kaiju-primary-dark: hsl(140, 62%, 20%);\n  --kaiju-accent: hsl(140, 62%, 90%);\n  --kaiju-text: hsl(140, 62%, 15%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 6.6667%, 91.1765%);\n  --card: hsl(228, 9.8039%, 10%);\n  --card-foreground: hsl(0, 0%, 85.0980%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 6.6667%, 91.1765%);\n  --primary: hsl(203.7736, 87.6033%, 52.5490%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(195.0000, 15.3846%, 94.9020%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(210, 3.3898%, 46.2745%);\n  --accent: hsl(205.7143, 70%, 7.8431%);\n  --accent-foreground: hsl(203.7736, 87.6033%, 52.5490%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --chart-1: hsl(203.8863, 88.2845%, 53.1373%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(228, 9.8039%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 85.0980%);\n  --sidebar-primary: hsl(202.8169, 89.1213%, 53.1373%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(205.7143, 70%, 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736, 87.6033%, 52.5490%);\n  --sidebar-border: hsl(205.7143, 15.7895%, 26.0784%);\n  --sidebar-ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --font-sans: Inter, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'JetBrains Mono', Courier New, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n}\n\n@layer base {\n  * {\n    border-color: hsl(var(--border));\n  }\n\n  body {\n    font-family: var(--font-sans);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: hsl(var(--background));\n    color: hsl(var(--foreground));\n    scroll-behavior: smooth;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer utilities {\n  .gradient-text {\n    background: linear-gradient(135deg, var(--primary) 0%, hsl(258, 90%, 66%) 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n\n  .animate-fade-in {\n    animation: fadeIn 0.5s ease-in-out;\n  }\n\n  .animate-slide-up {\n    animation: slideUp 0.6s ease-out;\n  }\n\n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes slideUp {\n  from { transform: translateY(20px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n}\n","size_bytes":7081},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/oauth-connect.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\n\ninterface ConnectionStatus {\n  connected: boolean;\n  user_id: string | null;\n}\n\nexport function OAuthConnect() {\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Check connection status\n  const { data: status, isLoading } = useQuery<ConnectionStatus>({\n    queryKey: ['/api/auth/threads/status'],\n    refetchInterval: 5000, // Check status every 5 seconds\n  });\n\n  const handleConnect = () => {\n    setIsConnecting(true);\n    // Redirect to OAuth endpoint\n    window.location.href = '/api/auth/threads/connect';\n  };\n\n  // Handle URL parameters for success/error states\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const success = urlParams.get('success');\n    const error = urlParams.get('error');\n\n    if (success === 'instagram_connected') {\n      // Refresh connection status and social media posts\n      queryClient.invalidateQueries({ queryKey: ['/api/auth/threads/status'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/social-media'] });\n      \n      // Remove the URL parameter\n      const url = new URL(window.location.href);\n      url.searchParams.delete('success');\n      window.history.replaceState({}, '', url);\n      \n      setIsConnecting(false);\n    }\n\n    if (error) {\n      console.error('OAuth error:', error);\n      setIsConnecting(false);\n      \n      // Remove the error parameter\n      const url = new URL(window.location.href);\n      url.searchParams.delete('error');\n      window.history.replaceState({}, '', url);\n    }\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"text-center p-4\">\n        <div className=\"inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-[#39FF14]\"></div>\n        <p className=\"text-gray-400 text-sm mt-2\">Checking connection status...</p>\n      </div>\n    );\n  }\n\n  if (status?.connected) {\n    return (\n      <div className=\"text-center p-6 bg-green-900/20 rounded-lg border border-green-600/30\">\n        <svg className=\"w-12 h-12 text-green-500 mx-auto mb-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n        </svg>\n        <h3 className=\"text-green-500 font-semibold mb-2\">Instagram Connected!</h3>\n        <p className=\"text-gray-300 text-sm\">\n          Your @earld.kaiju content will now appear automatically. \n          Content refreshes every 5 minutes.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-center p-6 bg-blue-900/20 rounded-lg border border-blue-600/30\">\n      <svg className=\"w-12 h-12 text-blue-500 mx-auto mb-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path d=\"M7.8 2h8.4C19.4 2 22 4.6 22 7.8v8.4a5.8 5.8 0 0 1-5.8 5.8H7.8C4.6 22 2 19.4 2 16.2V7.8A5.8 5.8 0 0 1 7.8 2m-.2 2A3.6 3.6 0 0 0 4 7.6v8.8C4 18.39 5.61 20 7.6 20h8.8a3.6 3.6 0 0 0 3.6-3.6V7.6C20 5.61 18.39 4 16.4 4H7.6m9.65 1.5a1.25 1.25 0 0 1 1.25 1.25A1.25 1.25 0 0 1 17.25 8 1.25 1.25 0 0 1 16 6.75a1.25 1.25 0 0 1 1.65-1.25M12 7a5 5 0 0 1 5 5 5 5 0 0 1-5 5 5 5 0 0 1-5-5 5 5 0 0 1 5-5m0 2a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"/>\n      </svg>\n      <h3 className=\"text-blue-500 font-semibold mb-4\">Connect Your Instagram</h3>\n      <p className=\"text-gray-300 text-sm mb-6\">\n        Connect your @earld.kaiju Instagram account to automatically display your latest posts here.\n      </p>\n      <button\n        onClick={handleConnect}\n        disabled={isConnecting}\n        className=\"bg-[#39FF14] text-black px-6 py-3 rounded-lg font-semibold hover:bg-[#32E010] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        data-testid=\"button-connect-instagram\"\n      >\n        {isConnecting ? (\n          <span className=\"flex items-center gap-2\">\n            <div className=\"inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-black\"></div>\n            Connecting...\n          </span>\n        ) : (\n          'Connect Instagram Account'\n        )}\n      </button>\n      <p className=\"text-gray-500 text-xs mt-4\">\n        Secure OAuth authentication via Meta's Threads API\n      </p>\n    </div>\n  );\n}","size_bytes":4265},"client/src/data/blog-posts.ts":{"content":"export interface BlogPost {\n  id: string;\n  title: string;\n  slug: string;\n  excerpt: string;\n  content: string;\n  publishedAt: string;\n  category: 'bjj' | 'development' | 'general';\n  featured: boolean;\n  tags: string[];\n  readTime: number;\n}\n\nexport const blogPosts: BlogPost[] = [\n  {\n    id: \"white-to-black-belt-journey\",\n    title: \"From White to Black: How Jiu-Jitsu Rewired My Life and Career\",\n    slug: \"white-to-black-belt-life-career\",\n    excerpt: \"Earning my black belt is the most meaningful milestone of my life outside becoming a father. Here's what changed between white, blue, purple, brown, and black—and why these lessons shape how I write code, lead projects, and show up for people.\",\n    content: `\n# From White to Black: How Jiu-Jitsu Rewired My Life and Career\n\nEarning my black belt is the most meaningful milestone of my life outside becoming a father. Here's what changed between white, blue, purple, brown, and black—and why these lessons shape how I write code, lead projects, and show up for people.\n\n## White → Blue: Self-Discovery\n\nI learned I could do hard things consistently. On the mat that meant showing up; at work it meant taking on unfamiliar stacks and shipping anyway.\n\nThe white belt phase taught me that progress isn't always visible. Just like debugging a complex issue, sometimes you're making progress even when it doesn't feel like it. Every tap, every failed technique, every moment of confusion was building something deeper.\n\n## Purple: Boundaries & Control\n\nI stopped muscling through problems. I built systems, respected pace, and focused on position over submission—the engineering version is architecture over hacks.\n\nThis is where I learned that technique beats strength, just like clean code beats clever hacks. In both BJJ and development, taking time to build proper foundations saves you from having to force solutions later.\n\n## Brown: Service & Leadership\n\nTeaching others made me sharper. I learned to give clear feedback, protect learning time, and create calm in chaos.\n\nAs a brown belt, I started coaching others, which directly translated to mentoring junior engineers. Breaking down complex techniques for beginners taught me how to explain technical concepts clearly and create psychological safety for learning.\n\n## Black: Quiet Confidence\n\nMastery isn't magic—it's repetition. My job now is to make the hard feel simple: in guard, in code, in teams.\n\nThe black belt represents not an end, but a new beginning. It's about making the complex look effortless and helping others find their own path to mastery.\n\n## The Developer Connection\n\nEvery principle I learned on the mat has made me a better engineer:\n\n- **Breathing under pressure**: When production is down, staying calm leads to better solutions\n- **Systems thinking**: Like guard retention, good architecture is about maintaining advantageous positions\n- **Continuous learning**: Every roll teaches something new, just like every code review or project retrospective\n- **Ego management**: Being willing to tap out (admit when you're wrong) prevents bigger problems\n\nThe journey from white to black belt mirrors the progression from junior to senior engineer. It's not about raw talent—it's about showing up consistently, learning from failures, and developing the judgment to know when to push and when to yield.\n\n---\n\n*Want to start your own BJJ journey? Check out my private lesson offerings at [Earl the Kaiju Private Lessons](/earldkaiju).*\n    `,\n    publishedAt: \"2024-01-15\",\n    category: 'bjj',\n    featured: true,\n    tags: ['Brazilian Jiu-Jitsu', 'Career Development', 'Personal Growth', 'Leadership'],\n    readTime: 6\n  },\n  {\n    id: \"bjj-habits-better-engineer\",\n    title: \"Five BJJ Habits That Make Me a Better Front-End Engineer\",\n    slug: \"bjj-habits-better-engineer\",\n    excerpt: \"From breathing under pressure to drilling fundamentals, Brazilian Jiu-Jitsu has taught me invaluable lessons that directly translate to better code, cleaner architecture, and more effective teamwork.\",\n    content: `\n# Five BJJ Habits That Make Me a Better Front-End Engineer\n\nFrom breathing under pressure to drilling fundamentals, Brazilian Jiu-Jitsu has taught me invaluable lessons that directly translate to better code, cleaner architecture, and more effective teamwork.\n\n## 1. Breathe First, Then Pass\n\n**On the mat**: When someone has you in a tight position, your first instinct is to panic and muscle out. But experienced grapplers know: breathe first, then find your escape.\n\n**In code**: When faced with a critical bug or tight deadline, I pause and breathe before diving in. This prevents hasty decisions that create technical debt. I write the smallest useful PR instead of trying to fix everything at once.\n\nInstead of rushing into panic-driven solutions that break multiple things, I focus on targeted fixes that solve one problem well.\n\n## 2. Position Before Submission\n\n**On the mat**: In BJJ, you secure a dominant position before attempting a submission. Going for the finish too early often leads to losing everything you've worked for.\n\n**In code**: I prioritize solid architecture before adding features. Building accessible components before visual flourish. Getting the foundation right before optimizing.\n\n## 3. Drill to Kill\n\n**On the mat**: Repetition builds muscle memory. We drill basic movements thousands of times so they become automatic under pressure.\n\n**In code**: I repeat patterns until they become second nature - form validation, API error states, focus management. This consistency reduces bugs and improves team velocity.\n\n## 4. Roll With Everyone\n\n**On the mat**: Training with different body types, skill levels, and styles makes you adaptable. Each partner teaches you something new.\n\n**In code**: I pair with designers, QA, backend engineers. Each perspective improves the final product and diversifies my feedback sources.\n\n## 5. Tap, Reset, Improve\n\n**On the mat**: When caught in a submission, tap early, reset, and try again. No ego, just learning.\n\n**In code**: Post-mortems without blame, iterative improvements, calm problem-solving. Every bug is a learning opportunity, not a failure.\n\n---\n\n*Want to experience these principles firsthand? Check out my private BJJ lesson offerings at [Earl the Kaiju Private Lessons](/earldkaiju) or read more development insights in my blog.*\n    `,\n    publishedAt: \"2024-02-01\",\n    category: 'bjj',\n    featured: true,\n    tags: ['Brazilian Jiu-Jitsu', 'Career Development', 'Engineering', 'Best Practices'],\n    readTime: 4\n  }\n];\n","size_bytes":6567},"client/src/data/experience.ts":{"content":"export interface WorkExperience {\n  id: string;\n  company: string;\n  position: string;\n  duration: string;\n  description?: string;\n  logo?: string;\n  technologies?: string[];\n}\n\nexport const workExperience: WorkExperience[] = [\n  {\n    id: \"self-employment\",\n    company: \"Self-Employment\",\n    position: \"Freelance Engineer & Designer\",\n    duration: \"2023 - Present\",\n    description: \"Full-stack development projects with focus on React, Next.js, and design systems\",\n    technologies: [\"React\", \"Next.js\", \"TypeScript\", \"Tailwind CSS\"]\n  },\n  {\n    id: \"wealth-creation\",\n    company: \"Wealth Creation Innovation\",\n    position: \"Senior Front-End Engineer (Contract)\",\n    duration: \"2022 - 2023\",\n    description: \"Led front-end development for financial technology platform\",\n    technologies: [\"Angular\", \"TypeScript\", \"RxJS\", \"Material Design\"]\n  },\n  {\n    id: \"asembia\",\n    company: \"Asembia\",\n    position: \"Frontend Engineer\",\n    duration: \"2021 - 2022\",\n    description: \"Developed healthcare technology solutions with emphasis on accessibility\",\n    logo: \"/images/asembia.png\",\n    technologies: [\"React\", \"JavaScript\", \"SCSS\", \"Jest\"]\n  },\n  {\n    id: \"broadcastmed\",\n    company: \"BroadcastMed\",\n    position: \"Lead Designer and Developer\",\n    duration: \"2020 - 2021\",\n    description: \"Led design and development of medical education platform\",\n    logo: \"/images/broadcastmed.png\",\n    technologies: [\"Vue.js\", \"Node.js\", \"Adobe Creative Suite\"]\n  },\n  {\n    id: \"prosek\",\n    company: \"Prosek Partners\",\n    position: \"Freelance Front-End Web Engineer\",\n    duration: \"2019 - 2020\",\n    description: \"Financial services website development and maintenance\",\n    logo: \"/images/prosek.png\",\n    technologies: [\"WordPress\", \"PHP\", \"JavaScript\", \"CSS\"]\n  },\n  {\n    id: \"seide\",\n    company: \"William R Seide Agency\",\n    position: \"Frontend Engineer\",\n    duration: \"2018 - 2019\",\n    description: \"Insurance industry web development and digital marketing solutions\",\n    technologies: [\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\"]\n  },\n  {\n    id: \"merkle\",\n    company: \"Merkle Inc\",\n    position: \"Email Marketing Specialist\",\n    duration: \"2017 - 2018\",\n    description: \"Email campaign development and automation for major brands\",\n    logo: \"/images/Merkle.png\",\n    technologies: [\"HTML\", \"CSS\", \"Email Templates\", \"Marketing Automation\"]\n  },\n  {\n    id: \"merck\",\n    company: \"Merck\",\n    position: \"Freelance Web Engineer\",\n    duration: \"2016 - 2017\",\n    description: \"Pharmaceutical industry web development projects\",\n    logo: \"/images/Merck_Logo.svg\",\n    technologies: [\"HTML\", \"CSS\", \"JavaScript\", \"CMS\"]\n  },\n  {\n    id: \"novocent\",\n    company: \"Novocent\",\n    position: \"Frontend Web Engineer\",\n    duration: \"2015 - 2016\",\n    description: \"Healthcare technology frontend development\",\n    technologies: [\"HTML\", \"CSS\", \"JavaScript\", \"Bootstrap\"]\n  },\n  {\n    id: \"verizon\",\n    company: \"Verizon Wireless\",\n    position: \"Front-End Engineer\",\n    duration: \"2014 - 2015\",\n    description: \"Telecommunications industry web development\",\n    logo: \"/images/verizon.png\",\n    technologies: [\"HTML\", \"CSS\", \"JavaScript\", \"Responsive Design\"]\n  },\n  {\n    id: \"second-melody\",\n    company: \"Second Melody\",\n    position: \"Web Engineer\",\n    duration: \"2013 - 2014\",\n    description: \"Music industry web development and e-commerce solutions\",\n    technologies: [\"HTML\", \"CSS\", \"JavaScript\", \"E-commerce\"]\n  }\n];\n","size_bytes":3445},"client/src/data/projects.ts":{"content":"export interface Project {\n  id: string;\n  title: string;\n  description: string;\n  problem: string;\n  solution: string;\n  result: string;\n  stack: string[];\n  features: string[];\n  metrics?: {\n    label: string;\n    value: string;\n    improvement?: string;\n  }[];\n  links: {\n    demo?: string;\n    repo?: string;\n  };\n  category: 'featured' | 'development' | 'design';\n}\n\nexport const projects: Project[] = [\n  {\n    id: \"employee-directory\",\n    title: \"Employee Directory – Multi-API Aggregation\",\n    description: \"Transforming API chaos into a streamlined, accessible directory experience.\",\n    problem: \"Multiple API sources (Twitter, IMDB, Wikipedia) with inconsistent schemas, slow sequential fetches (2.1s TTI), and confusing search UI causing user frustration.\",\n    solution: \"Built normalized data adapters, implemented React Suspense patterns, added skeleton loading states, and comprehensive keyboard navigation with proper ARIA labels.\",\n    result: \"44% faster TTI (2.1s → 1.2s), inline error handling, 2× faster profile discovery, and WCAG AA compliance achieved.\",\n    stack: [\"Next.js 14\", \"React 18\", \"TypeScript\", \"Tailwind CSS\"],\n    features: [\n      \"Concurrent API fetching\",\n      \"Real-time search with debouncing\",\n      \"Skeleton loading states\",\n      \"Error boundaries & fallbacks\",\n      \"Keyboard navigation\",\n      \"Mobile-first responsive\"\n    ],\n    metrics: [\n      { label: \"Time to Interactive\", value: \"1.2s\", improvement: \"44% ↓\" },\n      { label: \"Lighthouse Score\", value: \"93\", improvement: \"+25 points\" },\n      { label: \"Accessibility\", value: \"WCAG AA\", improvement: \"100% compliant\" }\n    ],\n    links: {\n      demo: \"https://employee-directory.ehicksonjr.com\",\n      repo: \"https://github.com/ehicksonjr/employee-directory\"\n    },\n    category: 'featured'\n  },\n  {\n    id: \"portfolio-website\",\n    title: \"Portfolio Website – Full-Stack Implementation\",\n    description: \"Modern engineering portfolio showcasing responsive design, performance optimization, and personal branding.\",\n    problem: \"Create a memorable portfolio that balances technical depth with visual appeal and loads fast on all devices.\",\n    solution: \"Next.js 14 with dynamic metadata, Tailwind for design systems, OG image generation, and comprehensive SEO optimization.\",\n    result: \"95+ Lighthouse score, sub-1s load time, improved conversion rate for project inquiries.\",\n    stack: [\"Next.js 14\", \"Tailwind CSS\", \"Framer Motion\", \"Vercel\"],\n    features: [\n      \"Dynamic OG image generation\",\n      \"Design system architecture\", \n      \"Performance optimization\",\n      \"SEO optimization\",\n      \"Responsive design\",\n      \"Contact form integration\"\n    ],\n    links: {\n      demo: \"https://www.ehicksonjr.com\",\n      repo: \"https://github.com/ehicksonjr/portfolio\"\n    },\n    category: 'development'\n  },\n  {\n    id: \"mtg-proxy-generator\",\n    title: \"MTG Proxy Generator – DOM Manipulation Showcase\",\n    description: \"Interactive card generation tool demonstrating vanilla JavaScript proficiency and dynamic content rendering.\",\n    problem: \"Magic: The Gathering players needed a tool to create proxy cards for testing decks before purchasing expensive cards.\",\n    solution: \"Pure JavaScript DOM manipulation, form validation, image processing, and local storage implementation with real-time preview capabilities.\",\n    result: \"Clean demonstration of JavaScript fundamentals, event handling optimization, and performance without frameworks.\",\n    stack: [\"Vanilla JavaScript\", \"HTML5 Canvas\", \"CSS3\", \"LocalStorage\"],\n    features: [\n      \"Event delegation patterns\",\n      \"Canvas API integration\",\n      \"LocalStorage persistence\",\n      \"Form validation logic\",\n      \"Responsive CSS Grid\",\n      \"Performance profiling\"\n    ],\n    links: {\n      demo: \"https://mtg-proxy.ehicksonjr.com\",\n      repo: \"https://github.com/ehicksonjr/mtg-proxy-generator\"\n    },\n    category: 'development'\n  },\n  {\n    id: \"todo-list-app\",\n    title: \"Todo List App\",\n    description: \"React hooks, state management, local persistence with clean UI implementation.\",\n    problem: \"Create a task management solution that demonstrates modern React patterns and state management.\",\n    solution: \"React hooks for state management, localStorage for persistence, and clean component architecture.\",\n    result: \"Demonstrates mastery of React fundamentals and modern development patterns.\",\n    stack: [\"React\", \"JavaScript\", \"CSS3\"],\n    features: [\n      \"React hooks pattern\",\n      \"Local state management\", \n      \"Data persistence\",\n      \"Component composition\",\n      \"Responsive design\"\n    ],\n    links: {\n      demo: \"https://todo.ehicksonjr.com\",\n      repo: \"https://github.com/ehicksonjr/react-todo\"\n    },\n    category: 'development'\n  },\n  {\n    id: \"movie-rating-app\",\n    title: \"Movie Rating App\",\n    description: \"Vanilla JavaScript for Marvel movie ratings with form handling and user interactions.\",\n    problem: \"Demonstrate vanilla JavaScript proficiency through interactive form handling and user input validation.\",\n    solution: \"DOM manipulation, form validation, local storage, and dynamic UI updates without framework dependencies.\",\n    result: \"Clean implementation showcasing JavaScript fundamentals and DOM API mastery.\",\n    stack: [\"JavaScript\", \"HTML\", \"CSS\"],\n    features: [\n      \"Form validation\",\n      \"DOM manipulation\",\n      \"Event handling\",\n      \"Local storage\",\n      \"Responsive layout\"\n    ],\n    links: {\n      demo: \"https://movie-rating.ehicksonjr.com\",\n      repo: \"https://github.com/ehicksonjr/movie-rating-app\"\n    },\n    category: 'development'\n  },\n  {\n    id: \"game-show-app\",\n    title: \"Game Show App\",\n    description: \"Browser-based \\\"Wheel of Success\\\" word guessing game with dynamic UI rendering.\",\n    problem: \"Create an engaging word-guessing game that demonstrates game logic implementation and state management.\",\n    solution: \"Vanilla JavaScript for game logic, DOM manipulation for UI updates, and CSS animations for user feedback.\",\n    result: \"Interactive game demonstrating complex state management and user experience design.\",\n    stack: [\"JavaScript\", \"HTML\", \"CSS\"],\n    features: [\n      \"Game state management\",\n      \"Dynamic UI rendering\",\n      \"CSS animations\",\n      \"Event listeners\",\n      \"Logic flow control\"\n    ],\n    links: {\n      demo: \"https://wheel-of-success.ehicksonjr.com\",\n      repo: \"https://github.com/ehicksonjr/game-show-app\"\n    },\n    category: 'development'\n  }\n];\n","size_bytes":6505},"client/src/hooks/use-analytics.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'wouter';\nimport { trackPageView } from '../lib/analytics';\n\nexport const useAnalytics = () => {\n  const [location] = useLocation();\n  const prevLocationRef = useRef<string>(location);\n  \n  useEffect(() => {\n    if (location !== prevLocationRef.current) {\n      // Scroll to top on route change\n      window.scrollTo(0, 0);\n      \n      // Track page view\n      trackPageView(location);\n      prevLocationRef.current = location;\n    }\n  }, [location]);\n};\n","size_bytes":527},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/analytics.ts":{"content":"// Define the gtag function globally\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}\n\n// Initialize Google Analytics\nexport const initGA = () => {\n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n\n  if (!measurementId) {\n    console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    return;\n  }\n\n  // Add Google Analytics script to the head\n  const script1 = document.createElement('script');\n  script1.async = true;\n  script1.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;\n  document.head.appendChild(script1);\n\n  // Initialize gtag\n  const script2 = document.createElement('script');\n  script2.textContent = `\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n    gtag('config', '${measurementId}');\n  `;\n  document.head.appendChild(script2);\n};\n\n// Track page views - useful for single-page applications\nexport const trackPageView = (url: string) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n  if (!measurementId) return;\n  \n  window.gtag('config', measurementId, {\n    page_path: url\n  });\n};\n\n// Track events\nexport const trackEvent = (\n  action: string, \n  category?: string, \n  label?: string, \n  value?: number\n) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  window.gtag('event', action, {\n    event_category: category,\n    event_label: label,\n    value: value,\n  });\n};\n","size_bytes":1582},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { workExperience } from \"@/data/experience\";\n\nexport default function About() {\n  const skills = [\n    { name: \"JavaScript/TypeScript\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"React/Angular\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"WCAG/Accessibility\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"Design Systems\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"Node.js/Express\", level: \"Proficient\", color: \"bg-blue-100 text-blue-700\" },\n    { name: \"GraphQL\", level: \"Familiar\", color: \"bg-yellow-100 text-yellow-700\" },\n    { name: \"Python\", level: \"Familiar\", color: \"bg-yellow-100 text-yellow-700\" }\n  ];\n\n  const bjjLessons = [\n    {\n      title: \"Calm Under Pressure\",\n      description: \"BJJ teaches you to breathe and think clearly in stressful situations—the same mindset I apply when debugging critical production issues or handling tight deadlines.\"\n    },\n    {\n      title: \"Iterative Improvement\",\n      description: \"Every roll is a chance to refine technique. Similarly, every code review and sprint retrospective is an opportunity to enhance our development process.\"\n    },\n    {\n      title: \"Teaching & Mentorship\",\n      description: \"Coaching others on the mat improved my ability to break down complex concepts, give clear feedback, and support junior engineers' growth.\"\n    }\n  ];\n\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-gray-50 to-blue-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\" data-testid=\"page-title\">About Earl</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Engineer, designer, Brazilian Jiu-Jitsu black belt, and lifelong learner based in Parsippany, New Jersey\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Content */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 mb-16\">\n            <div>\n              <h2 className=\"text-3xl font-bold mb-6\" data-testid=\"section-title-technical\">Technical Background</h2>\n              <p className=\"text-gray-700 mb-6\" data-testid=\"bio-technical\">\n                I'm a Front-End Engineer and Graphic Designer with a Bachelor of Arts in Graphic Design from Kean University and a Tech Degree in Front-End Web Development from Team Treehouse. I specialize in creating user-friendly, accessible web experiences that balance technical excellence with compelling design.\n              </p>\n              \n              <h3 className=\"text-xl font-semibold mb-4\">Skills Matrix</h3>\n              <div className=\"space-y-3 mb-8\">\n                {skills.map((skill, index) => (\n                  <div key={index} className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium\" data-testid={`skill-name-${index}`}>{skill.name}</span>\n                    <span className={`text-xs px-2 py-1 rounded ${skill.color}`} data-testid={`skill-level-${index}`}>\n                      {skill.level}\n                    </span>\n                  </div>\n                ))}\n              </div>\n\n              <h3 className=\"text-xl font-semibold mb-4\">Development Workflow</h3>\n              <div className=\"text-sm text-gray-600 space-y-2\">\n                <div data-testid=\"workflow-1\">• Tickets → Feature branches → Pull requests → Code reviews</div>\n                <div data-testid=\"workflow-2\">• Test-driven development with Jest and Cypress</div>\n                <div data-testid=\"workflow-3\">• CI/CD pipelines with GitHub Actions and Vercel</div>\n                <div data-testid=\"workflow-4\">• Design collaboration with Figma and Storybook</div>\n              </div>\n            </div>\n\n            <div>\n              <h2 className=\"text-3xl font-bold mb-6\" data-testid=\"section-title-bjj\">The BJJ Connection</h2>\n              \n              <div className=\"mb-6\">\n                <div className=\"w-full bg-gradient-to-br from-red-900 to-black rounded-xl mb-4 aspect-video flex items-center justify-center\">\n                  <div className=\"text-center text-white\">\n                    <i className=\"fas fa-user-ninja text-6xl mb-3 text-red-500\"></i>\n                    <p className=\"text-lg font-semibold\">Earl \"The Kaiju\" Hickson</p>\n                    <p className=\"text-sm opacity-80\">Brazilian Jiu-Jitsu Black Belt</p>\n                  </div>\n                </div>\n              </div>\n\n              <p className=\"text-gray-700 mb-6\" data-testid=\"bio-bjj\">\n                My journey into Brazilian Jiu-Jitsu began in 2015 and has profoundly shaped both my personal development and professional approach. Earning my black belt is the most meaningful milestone of my life outside becoming a father.\n              </p>\n\n              <div className=\"space-y-4\">\n                {bjjLessons.map((lesson, index) => (\n                  <div key={index} className=\"border-l-4 border-primary-500 pl-4\">\n                    <h4 className=\"font-semibold text-gray-900\" data-testid={`lesson-title-${index}`}>{lesson.title}</h4>\n                    <p className=\"text-sm text-gray-600\" data-testid={`lesson-description-${index}`}>{lesson.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Experience Timeline */}\n          <div className=\"mb-16\">\n            <h2 className=\"text-3xl font-bold mb-8\" data-testid=\"section-title-experience\">Professional Experience</h2>\n            <div className=\"space-y-6\">\n              {workExperience.slice(0, 5).map((job, index) => (\n                <div key={job.id} className=\"flex items-center space-x-4 p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"w-12 h-12 bg-white rounded-lg flex items-center justify-center border border-gray-200\">\n                    {job.logo ? (\n                      <img \n                        src={job.logo} \n                        alt={`${job.company} logo`}\n                        className=\"w-8 h-8 object-contain\"\n                      />\n                    ) : (\n                      <i className=\"fas fa-laptop-code text-primary-500\"></i>\n                    )}\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold\" data-testid={`job-title-${index}`}>{job.position}</h3>\n                    <p className=\"text-sm text-gray-600\" data-testid={`job-company-${index}`}>{job.company} • {job.duration}</p>\n                    {job.description && (\n                      <p className=\"text-sm text-gray-700 mt-1\" data-testid={`job-description-${index}`}>{job.description}</p>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              <div className=\"text-center\">\n                <a \n                  href=\"https://www.linkedin.com/in/earl-hickson-jr/\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\" \n                  className=\"inline-flex items-center text-primary-500 font-semibold hover:text-primary-600\"\n                  data-testid=\"link-linkedin-full\"\n                >\n                  <i className=\"fab fa-linkedin mr-2\"></i>\n                  View Full Resume on LinkedIn\n                </a>\n              </div>\n            </div>\n          </div>\n\n          {/* Personal Images */}\n          <div className=\"mb-16\">\n            <h2 className=\"text-3xl font-bold mb-8\" data-testid=\"section-title-personal\">Personal</h2>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <div className=\"w-full bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl aspect-square flex items-center justify-center\">\n                <div className=\"text-center text-blue-700\">\n                  <i className=\"fas fa-users text-4xl mb-3\"></i>\n                  <p className=\"font-semibold\">Family</p>\n                  <p className=\"text-sm opacity-80\">Father & Husband</p>\n                </div>\n              </div>\n              <div className=\"w-full bg-gradient-to-br from-red-100 to-red-200 rounded-xl aspect-square flex items-center justify-center\">\n                <div className=\"text-center text-red-700\">\n                  <i className=\"fas fa-fist-raised text-4xl mb-3\"></i>\n                  <p className=\"font-semibold\">BJJ Training</p>\n                  <p className=\"text-sm opacity-80\">Black Belt Coach</p>\n                </div>\n              </div>\n              <div className=\"w-full bg-gradient-to-br from-green-100 to-green-200 rounded-xl aspect-square flex items-center justify-center\">\n                <div className=\"text-center text-green-700\">\n                  <i className=\"fas fa-laptop-code text-4xl mb-3\"></i>\n                  <p className=\"font-semibold\">Engineering</p>\n                  <p className=\"text-sm opacity-80\">Front-End Expert</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Social Links */}\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold mb-6\" data-testid=\"section-title-connect\">Let's Connect</h2>\n            <div className=\"flex justify-center space-x-6\">\n              <a \n                href=\"https://www.linkedin.com/in/earl-hickson-jr/\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center text-white hover:bg-blue-700 transition-colors\"\n                data-testid=\"link-linkedin\"\n              >\n                <i className=\"fab fa-linkedin text-xl\"></i>\n              </a>\n              <a \n                href=\"https://github.com/ehicksonjr\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"w-12 h-12 bg-gray-800 rounded-full flex items-center justify-center text-white hover:bg-gray-900 transition-colors\"\n                data-testid=\"link-github\"\n              >\n                <i className=\"fab fa-github text-xl\"></i>\n              </a>\n              <a \n                href=\"https://www.instagram.com/earld.kaiju/\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white hover:opacity-90 transition-opacity\"\n                data-testid=\"link-instagram\"\n              >\n                <i className=\"fab fa-instagram text-xl\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":10913},"client/src/pages/article.tsx":{"content":"import { useRoute } from \"wouter\";\nimport { Link } from \"wouter\";\nimport { blogPosts } from \"@/data/blog-posts\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Article() {\n  const [, params] = useRoute(\"/articles/:slug\");\n  const slug = params?.slug;\n  \n  const post = blogPosts.find(p => p.slug === slug);\n\n  if (!post) {\n    return (\n      <div className=\"pt-16 min-h-screen flex items-center justify-center\">\n        <div className=\"text-center max-w-2xl mx-auto px-4\">\n          <h1 className=\"text-4xl font-bold mb-4\" data-testid=\"error-title\">Article Not Found</h1>\n          <p className=\"text-gray-600 mb-8\">\n            The article you're looking for doesn't exist or has been moved.\n          </p>\n          <Button asChild data-testid=\"button-back-to-blog\">\n            <Link href=\"/blog\">\n              <i className=\"fas fa-arrow-left mr-2\"></i>\n              Back to Blog\n            </Link>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const categoryColors = {\n    bjj: \"bg-purple-100 text-purple-700\",\n    development: \"bg-blue-100 text-blue-700\",\n    general: \"bg-gray-100 text-gray-700\"\n  };\n\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"mb-8\">\n            <Button variant=\"ghost\" asChild className=\"mb-6\" data-testid=\"button-back\">\n              <Link href=\"/blog\">\n                <i className=\"fas fa-arrow-left mr-2\"></i>\n                Back to Blog\n              </Link>\n            </Button>\n            \n            <div className={`inline-flex items-center px-3 py-1 rounded-full ${categoryColors[post.category]} text-sm font-medium mb-4`}>\n              {post.category.toUpperCase()}\n            </div>\n            \n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6 leading-tight\" data-testid=\"article-title\">\n              {post.title}\n            </h1>\n            \n            <div className=\"flex items-center gap-6 text-gray-600 mb-8\">\n              <div className=\"flex items-center gap-2\">\n                <img \n                  src=\"https://www.ehicksonjr.com/_next/static/media/me.edd8b1e7.jpeg\" \n                  alt=\"Earl Hickson Jr.\" \n                  className=\"w-10 h-10 rounded-full\"\n                />\n                <span className=\"font-medium\">Earl Hickson Jr.</span>\n              </div>\n              <span data-testid=\"article-date\">{post.publishedAt}</span>\n              <span data-testid=\"article-read-time\">{post.readTime} min read</span>\n            </div>\n            \n            {/* Featured Image for BJJ posts */}\n            {post.category === 'bjj' && (\n              <div className=\"mb-8\">\n                <img \n                  src=\"https://www.ehicksonjr.com/_next/static/media/MeBjj_2.6bf53e95.jpg\" \n                  alt=\"Earl Hickson Jr. Brazilian Jiu-Jitsu training\" \n                  className=\"w-full rounded-xl shadow-lg\"\n                  data-testid=\"article-featured-image\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* Article Content */}\n      <section className=\"pb-20\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <article className=\"prose prose-lg max-w-none\">\n            <div \n              className=\"text-gray-800 leading-relaxed\"\n              data-testid=\"article-content\"\n              dangerouslySetInnerHTML={{ __html: post.content.replace(/\\n/g, '<br/>') }}\n            />\n          </article>\n\n          {/* Tags */}\n          {post.tags && post.tags.length > 0 && (\n            <div className=\"mt-12 pt-8 border-t border-gray-200\">\n              <h3 className=\"text-lg font-semibold mb-4\">Tags</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {post.tags.map((tag, index) => (\n                  <span \n                    key={index}\n                    className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm\"\n                    data-testid={`tag-${index}`}\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Call to Action */}\n          <div className=\"mt-16 p-8 bg-gradient-to-r from-purple-50 to-blue-50 rounded-2xl\">\n            <div className=\"text-center\">\n              {post.category === 'bjj' ? (\n                <>\n                  <h3 className=\"text-2xl font-bold mb-4\" data-testid=\"cta-bjj-title\">\n                    Ready to Start Your BJJ Journey?\n                  </h3>\n                  <p className=\"text-gray-600 mb-6\">\n                    Book a private lesson and experience the transformative power of Brazilian Jiu-Jitsu.\n                  </p>\n                  <Button asChild size=\"lg\" className=\"bg-purple-500 hover:bg-purple-600\" data-testid=\"button-bjj-lessons\">\n                    <Link href=\"/earldkaiju\">\n                      <i className=\"fas fa-fist-raised mr-2\"></i>\n                      Book Private Lessons\n                    </Link>\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <h3 className=\"text-2xl font-bold mb-4\" data-testid=\"cta-dev-title\">\n                    Let's Work Together\n                  </h3>\n                  <p className=\"text-gray-600 mb-6\">\n                    Interested in collaborating on a project or discussing development opportunities?\n                  </p>\n                  <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                    <Button asChild size=\"lg\" data-testid=\"button-contact\">\n                      <a href=\"mailto:hello@ehicksonjr.com\">\n                        <i className=\"fas fa-envelope mr-2\"></i>\n                        Get In Touch\n                      </a>\n                    </Button>\n                    <Button asChild variant=\"outline\" size=\"lg\" data-testid=\"button-case-studies\">\n                      <Link href=\"/case-studies\">\n                        <i className=\"fas fa-code mr-2\"></i>\n                        View Case Studies\n                      </Link>\n                    </Button>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n\n          {/* Related Posts */}\n          <div className=\"mt-16\">\n            <h3 className=\"text-2xl font-bold mb-8\" data-testid=\"related-posts-title\">More Articles</h3>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {blogPosts\n                .filter(p => p.id !== post.id && p.category === post.category)\n                .slice(0, 2)\n                .map((relatedPost) => (\n                  <Link \n                    key={relatedPost.id} \n                    href={`/articles/${relatedPost.slug}`}\n                    className=\"block p-6 bg-gray-50 rounded-xl hover:shadow-md transition-shadow\"\n                    data-testid={`related-post-${relatedPost.id}`}\n                  >\n                    <h4 className=\"font-bold mb-2\">{relatedPost.title}</h4>\n                    <p className=\"text-gray-600 text-sm mb-3\">{relatedPost.excerpt}</p>\n                    <div className=\"text-xs text-gray-500\">{relatedPost.publishedAt}</div>\n                  </Link>\n                ))}\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":7432},"client/src/pages/blog.tsx":{"content":"import { useState } from \"react\";\nimport { blogPosts } from \"@/data/blog-posts\";\nimport BlogCard from \"@/components/ui/blog-card\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Blog() {\n  const [filter, setFilter] = useState<'all' | 'bjj' | 'development' | 'general'>('all');\n  \n  const filteredPosts = filter === 'all' \n    ? blogPosts \n    : blogPosts.filter(post => post.category === filter);\n\n  const categories = [\n    { key: 'all', label: 'All Posts', count: blogPosts.length },\n    { key: 'bjj', label: 'Brazilian Jiu-Jitsu', count: blogPosts.filter(p => p.category === 'bjj').length },\n    { key: 'development', label: 'Development', count: blogPosts.filter(p => p.category === 'development').length },\n    { key: 'general', label: 'General', count: blogPosts.filter(p => p.category === 'general').length }\n  ];\n\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\" data-testid=\"page-title\">Latest Writings</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Insights on front-end development, Brazilian Jiu-Jitsu, and the intersection of technical mastery and personal growth\n            </p>\n          </div>\n\n          {/* Category Filter */}\n          <div className=\"flex flex-wrap justify-center gap-2 mb-12\">\n            {categories.map((category) => (\n              <Button\n                key={category.key}\n                variant={filter === category.key ? \"default\" : \"outline\"}\n                onClick={() => setFilter(category.key as any)}\n                className={filter === category.key ? \"bg-primary-500 text-white\" : \"\"}\n                data-testid={`filter-${category.key}`}\n              >\n                {category.label} ({category.count})\n              </Button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Posts */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h2 className=\"text-2xl font-bold mb-8\" data-testid=\"section-title-featured\">Featured Posts</h2>\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {filteredPosts\n              .filter(post => post.featured)\n              .map((post) => (\n                <BlogCard key={post.id} post={post} featured={true} />\n              ))}\n          </div>\n        </div>\n      </section>\n\n      {/* All Posts */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h2 className=\"text-2xl font-bold mb-8\" data-testid=\"section-title-all\">All Posts</h2>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredPosts.map((post) => (\n              <BlogCard key={post.id} post={post} />\n            ))}\n          </div>\n\n          {filteredPosts.length === 0 && (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500\" data-testid=\"text-no-posts\">No posts found for this category.</p>\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Dev Notes Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold mb-4\" data-testid=\"section-title-dev-notes\">Dev Notes</h2>\n            <p className=\"text-xl text-gray-600\">Technical writeups and development insights coming soon</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"bg-white rounded-xl p-6\">\n              <h3 className=\"font-semibold mb-2\" data-testid=\"dev-note-angular\">Angular 18 Signals in Production</h3>\n              <p className=\"text-sm text-gray-600 mb-3\">Real-world experiences migrating from RxJS to Angular Signals for state management.</p>\n              <span className=\"text-xs text-gray-500\">Coming Soon</span>\n            </div>\n            \n            <div className=\"bg-white rounded-xl p-6\">\n              <h3 className=\"font-semibold mb-2\" data-testid=\"dev-note-wcag\">WCAG Quick Wins</h3>\n              <p className=\"text-sm text-gray-600 mb-3\">Low-effort, high-impact accessibility improvements every engineer should implement.</p>\n              <span className=\"text-xs text-gray-500\">Coming Soon</span>\n            </div>\n            \n            <div className=\"bg-white rounded-xl p-6\">\n              <h3 className=\"font-semibold mb-2\" data-testid=\"dev-note-tailwind\">Tailwind Theming Strategy</h3>\n              <p className=\"text-sm text-gray-600 mb-3\">Building maintainable design systems with Tailwind CSS custom properties.</p>\n              <span className=\"text-xs text-gray-500\">Coming Soon</span>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":5050},"client/src/pages/case-studies.tsx":{"content":"import { projects } from \"@/data/projects\";\nimport CaseStudyCard from \"@/components/ui/case-study-card\";\n\nexport default function CaseStudies() {\n  const featuredProject = projects.find(p => p.category === 'featured');\n  const otherProjects = projects.filter(p => p.category !== 'featured');\n\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\" data-testid=\"page-title\">Front-End Case Studies</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Real projects, measurable results, production code. Here's how I solve complex front-end challenges \n              with modern frameworks, accessibility standards, and performance optimization.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Project */}\n      {featuredProject && (\n        <section className=\"py-16 bg-gray-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <CaseStudyCard project={featuredProject} featured={true} />\n          </div>\n        </section>\n      )}\n\n      {/* Other Projects */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"space-y-16\">\n            {otherProjects.slice(0, 2).map((project) => (\n              <CaseStudyCard key={project.id} project={project} />\n            ))}\n          </div>\n\n          {/* Additional Projects Grid */}\n          <div className=\"mt-16\">\n            <h2 className=\"text-2xl font-bold mb-8\" data-testid=\"section-title-additional\">Additional Projects</h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {otherProjects.slice(2).map((project) => (\n                <div key={project.id} className=\"bg-gray-50 rounded-xl p-6 hover:shadow-md transition-shadow duration-300\">\n                  <h4 className=\"font-bold mb-2\" data-testid={`project-title-${project.id}`}>{project.title}</h4>\n                  <p className=\"text-sm text-gray-600 mb-4\" data-testid={`project-description-${project.id}`}>\n                    {project.description}\n                  </p>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded\" data-testid={`project-stack-${project.id}`}>\n                      {project.stack[0]}\n                    </span>\n                    <div className=\"flex gap-2\">\n                      {project.links.demo && (\n                        <a \n                          href={project.links.demo} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"text-primary-500 text-sm hover:text-primary-600\"\n                          data-testid={`project-demo-${project.id}`}\n                        >\n                          Demo\n                        </a>\n                      )}\n                      {project.links.repo && (\n                        <a \n                          href={project.links.repo} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"text-gray-500 text-sm hover:text-gray-700\"\n                          data-testid={`project-repo-${project.id}`}\n                        >\n                          Code\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-primary-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold mb-6\" data-testid=\"cta-title\">Interested in Working Together?</h2>\n          <p className=\"text-xl text-gray-600 mb-8\">\n            I'm available for senior front-end development roles and consulting projects. \n            Let's discuss how I can help your team build exceptional user experiences.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <a \n              href=\"mailto:e@ehicksonjr.com\" \n              className=\"inline-flex items-center justify-center px-8 py-4 bg-primary-500 text-white rounded-xl font-semibold hover:bg-primary-600 transition-colors\"\n              data-testid=\"button-contact\"\n            >\n              <i className=\"fas fa-envelope mr-2\"></i>\n              Start a Conversation\n            </a>\n            <a \n              href=\"/Earl_Hickson_Resume_2025.pdf\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center justify-center px-8 py-4 bg-white border-2 border-gray-200 rounded-xl font-semibold hover:border-primary-500 hover:text-primary-500 transition-colors\"\n              data-testid=\"button-resume\"\n            >\n              <i className=\"fas fa-download mr-2\"></i>\n              Download Resume\n            </a>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":5328},"client/src/pages/earldkaiju.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { insertBjjBookingSchema, type InsertBjjBooking, type SocialMediaPost } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { OAuthConnect } from \"@/components/oauth-connect\";\n// Image imports removed for GitHub deployment compatibility\nimport bjjAccomplishments from \"@/data/bjj-accomplishments.json\";\n\nexport default function EarldKaiju() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<InsertBjjBooking>({\n    resolver: zodResolver(insertBjjBookingSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      program: \"\",\n      goals: \"\",\n      availability: \"\",\n      smsConsent: false,\n    },\n  });\n\n  const bookingMutation = useMutation({\n    mutationFn: async (data: InsertBjjBooking) => {\n      const response = await apiRequest(\"POST\", \"/api/bjj-booking\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      toast({\n        title: \"Booking Request Submitted!\",\n        description: \"I'll text and email you within 24 hours to confirm your session details.\",\n      });\n      form.reset();\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Submission Failed\",\n        description: error.message || \"Please try again or contact me directly.\",\n        variant: \"destructive\",\n      });\n    },\n    onSettled: () => {\n      setIsSubmitting(false);\n    },\n  });\n\n  const onSubmit = (data: InsertBjjBooking) => {\n    setIsSubmitting(true);\n    bookingMutation.mutate(data);\n  };\n\n  // Fetch social media posts automatically\n  const { data: socialMediaData, isLoading: socialMediaLoading } = useQuery({\n    queryKey: ['/api/social-media'],\n    refetchInterval: 5 * 60 * 1000, // Refetch every 5 minutes\n    enabled: true, // Enable for real API integration\n  });\n\n  const socialMediaPosts: SocialMediaPost[] = (socialMediaData as any)?.posts || [];\n  const instagramPosts = socialMediaPosts.filter((post: SocialMediaPost) => post.platform === 'instagram');\n  const youtubePosts = socialMediaPosts.filter((post: SocialMediaPost) => post.platform === 'youtube');\n\n  // Auto-fetch Instagram posts on load\n  const fetchInstagramMutation = useMutation({\n    mutationFn: () => apiRequest('POST', '/api/social-media/fetch-instagram', {}),\n    onSuccess: () => {\n      // Refetch social media posts after successful Instagram fetch\n      queryClient.invalidateQueries({ queryKey: ['/api/social-media'] });\n    },\n  });\n\n  // Auto-fetch YouTube posts on load\n  const fetchYoutubeMutation = useMutation({\n    mutationFn: () => apiRequest('POST', '/api/social-media/fetch-youtube', {}),\n    onSuccess: () => {\n      // Refetch social media posts after successful YouTube fetch\n      queryClient.invalidateQueries({ queryKey: ['/api/social-media'] });\n    },\n  });\n\n  // Fetch content on component mount\n  useEffect(() => {\n    // Fetch YouTube videos\n    fetchYoutubeMutation.mutate();\n    \n    // Fetch Instagram posts \n    fetchInstagramMutation.mutate();\n  }, []);\n\n  // Disabled for static export\n  // useEffect(() => {\n  //   if (!socialMediaLoading && socialMediaPosts.length === 0) {\n  //     console.log('No posts found, triggering fetch...');\n  //     fetchInstagramMutation.mutate();\n  //     fetchYoutubeMutation.mutate();\n  //   }\n  // }, [socialMediaData, socialMediaLoading]);\n\n\n\n  return (\n    <div className=\"pt-16\">\n      {/* Hero Section with Banner */}\n      <section className=\"relative py-20 bg-black text-white overflow-hidden\">\n        {/* Background Pattern */}\n        <div className=\"absolute inset-0 opacity-20 bg-gradient-to-br from-[#39FF14]/20 via-transparent to-[#39FF14]/10\" />\n        \n        {/* Dark overlay for better text readability */}\n        <div className=\"absolute inset-0 bg-black/60\" />\n        \n        <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-[#39FF14]/20 backdrop-blur-sm text-[#39FF14] border border-[#39FF14]/30 text-sm font-medium mb-6 shadow-lg shadow-[#39FF14]/20\">\n              <i className=\"fas fa-fist-raised mr-2\"></i>\n              IBJJF Black Belt • Competitor • Coach\n            </div>\n            \n            {/* Kaiju Logo */}\n            <div className=\"flex justify-center mb-8\">\n              <div className=\"w-64 h-64 lg:w-80 lg:h-80 rounded-full overflow-hidden border-4 border-[#39FF14]/30 shadow-2xl shadow-[#39FF14]/50\" data-testid=\"kaiju-logo\">\n                <img \n                  src=\"/images/kaiju-logo.png\" \n                  alt=\"Earl The Kaiju - BJJ Black Belt Logo\" \n                  className=\"w-full h-full object-contain bg-black\"\n                />\n              </div>\n            </div>\n            \n            <p className=\"text-xl lg:text-2xl text-gray-100 mb-8 max-w-3xl mx-auto drop-shadow-lg\" data-testid=\"hero-description\">\n              One-on-one and small-group training for adults and kids in Morris County, NJ. Build real skills, safely and fast.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button \n                size=\"lg\" \n                className=\"bg-[#39FF14] hover:bg-[#39FF14]/80 text-black font-bold shadow-lg shadow-[#39FF14]/30 hover:shadow-[#39FF14]/50 transition-all\"\n                onClick={() => document.getElementById('booking')?.scrollIntoView({ behavior: 'smooth' })}\n                data-testid=\"button-book-lesson\"\n              >\n                <i className=\"fas fa-calendar-alt mr-2\"></i>\n                Book a Lesson\n              </Button>\n              <Button \n                variant=\"outline\" \n                size=\"lg\"\n                className=\"bg-black/50 backdrop-blur border-[#39FF14]/50 hover:bg-[#39FF14]/10 text-white hover:border-[#39FF14] transition-all\"\n                onClick={() => document.getElementById('kids-program')?.scrollIntoView({ behavior: 'smooth' })}\n                data-testid=\"button-kids-program\"\n              >\n                <i className=\"fas fa-child mr-2\"></i>\n                See Kids Program\n              </Button>\n            </div>\n          </div>\n\n        </div>\n      </section>\n\n      {/* Rest of Content */}\n      <section className=\"bg-gray-900 text-white py-20\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Why Train With Me */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-center mb-12 text-[#39FF14] drop-shadow-[0_0_20px_#39FF14]\" data-testid=\"section-title-why-train\">Why Train With Earl the Kaiju</h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg shadow-[#39FF14]/50 hover:shadow-[#39FF14]/70 transition-all\">\n                  <i className=\"fas fa-medal text-black text-2xl\"></i>\n                </div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"feature-black-belt\">IBJJF Black Belt</h3>\n                <p className=\"text-gray-300 text-sm\">Active competitor and experienced coach with proven results</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg shadow-[#39FF14]/50 hover:shadow-[#39FF14]/70 transition-all\">\n                  <i className=\"fas fa-heart text-black text-2xl\"></i>\n                </div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"feature-beginner-friendly\">Beginner-Friendly</h3>\n                <p className=\"text-gray-300 text-sm\">Technical, safety-first approach perfect for new practitioners</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg shadow-[#39FF14]/50 hover:shadow-[#39FF14]/70 transition-all\">\n                  <i className=\"fas fa-bullseye text-black text-2xl\"></i>\n                </div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"feature-customized\">Customized Plans</h3>\n                <p className=\"text-gray-300 text-sm\">Tailored training for self-defense, fitness, or competition goals</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg shadow-[#39FF14]/50 hover:shadow-[#39FF14]/70 transition-all\">\n                  <i className=\"fas fa-users text-black text-2xl\"></i>\n                </div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"feature-family\">Family Options</h3>\n                <p className=\"text-gray-300 text-sm\">Parent-and-kid sessions that are engaging and fun</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Programs */}\n          <div id=\"programs\" className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-center mb-12 text-[#39FF14] drop-shadow-[0_0_20px_#39FF14]\" data-testid=\"section-title-programs\">Training Programs</h2>\n            <div className=\"grid lg:grid-cols-2 gap-8\">\n              {/* Adults Program */}\n              <div className=\"bg-white/10 backdrop-blur rounded-2xl p-8 border border-white/20\">\n                <h3 className=\"text-2xl font-bold mb-4\" data-testid=\"program-adults-title\">Adults (60-90 min)</h3>\n                <div className=\"space-y-4 mb-6\">\n                  <div className=\"flex items-start\">\n                    <i className=\"fas fa-check-circle text-[#39FF14] mt-1 mr-3\"></i>\n                    <div>\n                      <h4 className=\"font-semibold\" data-testid=\"adult-foundations\">Foundations</h4>\n                      <p className=\"text-gray-300 text-sm\">Posture, frames, escapes, guard retention fundamentals</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <i className=\"fas fa-check-circle text-[#39FF14] mt-1 mr-3\"></i>\n                    <div>\n                      <h4 className=\"font-semibold\" data-testid=\"adult-self-defense\">Self-Defense</h4>\n                      <p className=\"text-gray-300 text-sm\">Clinch work, trips/throws, control to disengage safely</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <i className=\"fas fa-check-circle text-[#39FF14] mt-1 mr-3\"></i>\n                    <div>\n                      <h4 className=\"font-semibold\" data-testid=\"adult-conditioning\">Conditioning</h4>\n                      <p className=\"text-gray-300 text-sm\">Movement patterns, drilling, safe intensity building</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-black/20 rounded-xl p-4\">\n                  <h4 className=\"font-semibold mb-3\">Investment</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Trial Session</span>\n                      <span className=\"font-semibold\" data-testid=\"price-adult-trial\">$80</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Starter Pack (4 sessions)</span>\n                      <span className=\"font-semibold\" data-testid=\"price-adult-starter\">$300</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Progress Pack (8 sessions)</span>\n                      <span className=\"font-semibold\" data-testid=\"price-adult-progress\">$560</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Kids Program */}\n              <div id=\"kids-program\" className=\"bg-white/10 backdrop-blur rounded-2xl p-8 border border-white/20\">\n                <h3 className=\"text-2xl font-bold mb-4\" data-testid=\"program-kids-title\">Kids (45-60 min)</h3>\n                <div className=\"space-y-4 mb-6\">\n                  <div className=\"flex items-start\">\n                    <i className=\"fas fa-check-circle text-[#39FF14] mt-1 mr-3\"></i>\n                    <div>\n                      <h4 className=\"font-semibold\" data-testid=\"kids-play-based\">Play-Based Learning</h4>\n                      <p className=\"text-gray-300 text-sm\">Games for balance, grip strength, and body awareness</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <i className=\"fas fa-check-circle text-[#39FF14] mt-1 mr-3\"></i>\n                    <div>\n                      <h4 className=\"font-semibold\" data-testid=\"kids-anti-bullying\">Anti-Bullying</h4>\n                      <p className=\"text-gray-300 text-sm\">Verbal boundaries → defensive grips → safe holds</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <i className=\"fas fa-check-circle text-[#39FF14] mt-1 mr-3\"></i>\n                    <div>\n                      <h4 className=\"font-semibold\" data-testid=\"kids-parent-me\">Parent-and-Me</h4>\n                      <p className=\"text-gray-300 text-sm\">Special sessions available for family bonding</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-black/20 rounded-xl p-4\">\n                  <h4 className=\"font-semibold mb-3\">Investment</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Trial Session</span>\n                      <span className=\"font-semibold\" data-testid=\"price-kids-trial\">$70</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Small Group (2-4 kids)</span>\n                      <span className=\"font-semibold\" data-testid=\"price-kids-group\">From $40/person</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Parent-and-Me</span>\n                      <span className=\"font-semibold\" data-testid=\"price-parent-me\">$90/session</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Fighter Profile Section */}\n          <section className=\"mb-20\">\n            <div className=\"bg-black/80 rounded-2xl p-8 border border-[#39FF14]/20 shadow-xl overflow-hidden relative\">\n              {/* Section Header */}\n              <div className=\"text-center mb-8 relative z-10\">\n                <h1 className=\"text-4xl font-bold text-white mb-2\">EARL D HICKSON JR</h1>\n                <div className=\"text-xl text-[#39FF14] font-semibold mb-2\">Brazilian Jiu-Jitsu Black Belt</div>\n                <div className=\"text-gray-300 text-sm\">AMA Fight Club • Parsippany, NJ</div>\n              </div>\n\n              {/* Responsive Fighter Layout */}\n              <div className=\"grid md:grid-cols-2 gap-8 mb-8 relative z-10\">\n                {/* Left Side - Fighter Image (Desktop) / Top (Mobile) */}\n                <div className=\"order-1 md:order-1\">\n                  <div className=\"bg-white/5 rounded-xl p-4 border border-[#39FF14]/20 h-full flex items-center justify-center min-h-[400px]\">\n                    <div className=\"relative w-full h-full flex items-center justify-center\">\n                      <div className=\"text-center p-8\">\n                        <i className=\"fas fa-user-circle text-[#39FF14] text-8xl mb-4 drop-shadow-lg\"></i>\n                        <div className=\"text-white font-bold text-lg\">Earl Hickson Jr.</div>\n                        <div className=\"text-[#39FF14] text-sm\">BJJ Black Belt</div>\n                        <div className=\"text-gray-400 text-xs mt-2\">Photo coming soon</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right Side - Skills & Profile (Desktop) / Bottom (Mobile) */}\n                <div className=\"order-2 md:order-2 space-y-6\">\n                  {/* Profile Bio */}\n                  <div className=\"bg-white/5 rounded-xl p-6 border border-[#39FF14]/20\">\n                    <h3 className=\"text-white font-bold text-lg mb-4\">About Earl</h3>\n                    <p className=\"text-gray-300 leading-relaxed\">\n                      Brazilian Jiu-Jitsu black belt under AMA Fight Club, known for technical precision and competitive success. With over a decade of experience, Earl has earned medals at major tournaments including IBJJF, NAGA, and Grappling Industries events.\n                    </p>\n                    <p className=\"text-gray-300 leading-relaxed mt-4\">\n                      Specializing in both gi and no-gi training, Earl brings high-level competition experience to personalized coaching for all skill levels.\n                    </p>\n                  </div>\n\n                  {/* Skills & Expertise */}\n                  <div className=\"bg-white/5 rounded-xl p-6 border border-[#39FF14]/20\">\n                    <h3 className=\"text-white font-bold text-lg mb-4\">Skills & Expertise</h3>\n                    \n                    <div className=\"space-y-4\">\n                      <div>\n                        <div className=\"flex justify-between text-sm mb-2\">\n                          <span className=\"text-gray-200\">Technique Mastery</span>\n                          <span className=\"text-[#39FF14] font-medium\">95%</span>\n                        </div>\n                        <div className=\"w-full bg-gray-700/50 rounded-full h-2\">\n                          <div className=\"bg-[#39FF14] h-2 rounded-full\" style={{width: '95%'}}></div>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <div className=\"flex justify-between text-sm mb-2\">\n                          <span className=\"text-gray-200\">Competition Experience</span>\n                          <span className=\"text-[#39FF14] font-medium\">88%</span>\n                        </div>\n                        <div className=\"w-full bg-gray-700/50 rounded-full h-2\">\n                          <div className=\"bg-[#39FF14] h-2 rounded-full\" style={{width: '88%'}}></div>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <div className=\"flex justify-between text-sm mb-2\">\n                          <span className=\"text-gray-200\">Teaching Ability</span>\n                          <span className=\"text-[#39FF14] font-medium\">92%</span>\n                        </div>\n                        <div className=\"w-full bg-gray-700/50 rounded-full h-2\">\n                          <div className=\"bg-[#39FF14] h-2 rounded-full\" style={{width: '92%'}}></div>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <div className=\"flex justify-between text-sm mb-2\">\n                          <span className=\"text-gray-200\">Adaptability</span>\n                          <span className=\"text-[#39FF14] font-medium\">90%</span>\n                        </div>\n                        <div className=\"w-full bg-gray-700/50 rounded-full h-2\">\n                          <div className=\"bg-[#39FF14] h-2 rounded-full\" style={{width: '90%'}}></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Competition Stats Grid */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6 relative z-10\">\n                <div className=\"bg-white/5 rounded-lg p-4 border border-yellow-500/20 text-center\">\n                  <div className=\"text-3xl font-bold text-yellow-500 mb-1\">\n                    {bjjAccomplishments.tournament_history.filter((t: any) => t.placement === \"Gold\").length}\n                  </div>\n                  <div className=\"text-xs text-gray-300 uppercase tracking-wide\">Gold Medals</div>\n                </div>\n                <div className=\"bg-white/5 rounded-lg p-4 border border-gray-300/20 text-center\">\n                  <div className=\"text-3xl font-bold text-gray-300 mb-1\">\n                    {bjjAccomplishments.tournament_history.filter((t: any) => t.placement === \"Silver\").length}\n                  </div>\n                  <div className=\"text-xs text-gray-300 uppercase tracking-wide\">Silver Medals</div>\n                </div>\n                <div className=\"bg-white/5 rounded-lg p-4 border border-orange-600/20 text-center\">\n                  <div className=\"text-3xl font-bold text-orange-600 mb-1\">\n                    {bjjAccomplishments.tournament_history.filter((t: any) => t.placement === \"Bronze\").length}\n                  </div>\n                  <div className=\"text-xs text-gray-300 uppercase tracking-wide\">Bronze Medals</div>\n                </div>\n                <div className=\"bg-white/5 rounded-lg p-4 border border-[#39FF14]/20 text-center\">\n                  <div className=\"text-3xl font-bold text-[#39FF14] mb-1\">10+</div>\n                  <div className=\"text-xs text-gray-300 uppercase tracking-wide\">Years Experience</div>\n                </div>\n              </div>\n\n              {/* Recent Tournament Results */}\n              <div className=\"bg-white/5 rounded-xl p-6 border border-[#39FF14]/20 relative z-10\">\n                <h4 className=\"text-white font-bold mb-4 uppercase tracking-wide text-sm flex items-center\">\n                  <svg className=\"w-5 h-5 text-[#39FF14] mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n                  </svg>\n                  Recent Victories\n                </h4>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  {bjjAccomplishments.tournament_history.slice(0, 4).map((tournament: any, index: number) => (\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gradient-to-r from-black/60 to-purple-900/20 rounded-lg border border-gray-700/50\">\n                      <div className=\"flex-1\">\n                        <p className=\"text-white text-sm font-medium\">{tournament.event.replace(/NAGA|IBJJF/g, '').trim()}</p>\n                        <p className=\"text-gray-400 text-xs\">{tournament.date}</p>\n                      </div>\n                      <div className={`px-3 py-1 rounded-full text-xs font-bold ${\n                        tournament.placement === 'Gold' ? 'bg-yellow-500 text-black' :\n                        tournament.placement === 'Silver' ? 'bg-gray-300 text-black' :\n                        tournament.placement === 'Bronze' ? 'bg-orange-600 text-white' :\n                        'bg-gray-600 text-white'\n                      }`}>\n                        {tournament.placement}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Videos */}\n          <div className=\"mb-20\">\n            \n            {socialMediaLoading ? (\n              <div className=\"text-center py-12\">\n                <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-[#39FF14] mb-4\"></div>\n                <p className=\"text-gray-300\">Loading latest content...</p>\n              </div>\n            ) : (\n              <>\n                {/* YouTube Videos Section */}\n                {youtubePosts.length > 0 && (\n                  <div className=\"mb-16\">\n                    <div className=\"text-center mb-8\">\n                      <h2 className=\"text-3xl font-bold mb-4 bg-gradient-to-r from-red-500 to-red-600 bg-clip-text text-transparent\">\n                        Latest BJJ Content\n                      </h2>\n                      <p className=\"text-gray-400 mb-6\">Check out my latest Brazilian Jiu-Jitsu techniques and training videos</p>\n                      \n                      {/* Like, Comment, Subscribe CTA */}\n                      <div className=\"flex items-center justify-center gap-6 mb-8 text-sm text-gray-300\">\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-5 h-5 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path d=\"M7.8 2h8.4C19.4 2 22 4.6 22 7.8v8.4a5.8 5.8 0 0 1-5.8 5.8H7.8C4.6 22 2 19.4 2 16.2V7.8A5.8 5.8 0 0 1 7.8 2m-.2 2A3.6 3.6 0 0 0 4 7.6v8.8C4 18.39 5.61 20 7.6 20h8.8a3.6 3.6 0 0 0 3.6-3.6V7.6C20 5.61 18.39 4 16.4 4H7.6\"/>\n                            <path d=\"M16 10.5l-6-4.5v9\"/>\n                          </svg>\n                          <span>Like</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-5 h-5 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path d=\"M9 22a1 1 0 01-1-1v-3H4a2 2 0 01-2-2V4a2 2 0 012-2h16a2 2 0 012 2v12a2 2 0 01-2 2h-6.1l-3.7 3.71c-.2.19-.45.29-.7.29H9z\"/>\n                          </svg>\n                          <span>Comment</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-5 h-5 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                          </svg>\n                          <span>Subscribe</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Show only 4 most recent videos */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n                      {youtubePosts.slice(0, 4).map((post: SocialMediaPost, index: number) => (\n                        <div \n                          key={post.postId} \n                          className=\"group\"\n                        >\n                          <a \n                            href={post.permalink} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"block bg-gradient-to-br from-black/60 to-black/80 rounded-xl overflow-hidden border border-purple-600/30 hover:border-[#39FF14]/60 transition-all duration-500 hover:shadow-2xl hover:shadow-red-500/30 transform hover:scale-[1.03] hover:-translate-y-2\"\n                          >\n                            <div className=\"relative aspect-video bg-black/60 overflow-hidden\">\n                              <img \n                                src={post.thumbnailUrl ?? ''} \n                                alt={post.caption ?? 'YouTube video thumbnail'}\n                                className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-700\"\n                                loading=\"lazy\"\n                              />\n                              <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent group-hover:from-black/40 transition-all duration-300\">\n                                <div className=\"absolute inset-0 flex items-center justify-center\">\n                                  <div className=\"bg-red-600/90 hover:bg-red-500 backdrop-blur-sm rounded-full p-4 group-hover:scale-110 transition-all duration-300 shadow-lg\">\n                                    <svg \n                                      className=\"w-8 h-8 text-white ml-1\" \n                                      fill=\"currentColor\" \n                                      viewBox=\"0 0 24 24\"\n                                    >\n                                      <path d=\"M8 5v14l11-7z\"/>\n                                    </svg>\n                                  </div>\n                                </div>\n                                <div className=\"absolute bottom-2 right-2 bg-black/80 backdrop-blur-sm px-2 py-1 rounded text-white text-xs\">\n                                  Video\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"p-6\">\n                              <p className=\"text-gray-300 text-sm line-clamp-3 mb-3\">\n                                {post.caption || 'Watch this video on YouTube'}\n                              </p>\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-[#39FF14] text-xs font-semibold\">\n                                  {new Date(post.timestamp).toLocaleDateString()}\n                                </p>\n                                <div className=\"flex items-center gap-2 text-gray-400 text-xs\">\n                                  <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                                  </svg>\n                                  YouTube\n                                </div>\n                              </div>\n                            </div>\n                          </a>\n                        </div>\n                      ))}\n                    </div>\n\n                    {/* See More CTA Button */}\n                    <div className=\"text-center\">\n                      <a \n                        href=\"https://youtube.com/@earldkaiju\" \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-red-600 to-red-700 text-white rounded-xl hover:from-red-700 hover:to-red-800 transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-red-500/30\"\n                      >\n                        <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                        </svg>\n                        <span className=\"font-semibold\">Watch More on YouTube</span>\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"/>\n                        </svg>\n                      </a>\n                    </div>\n                  </div>\n                )}\n\n                {/* No content state */}\n                {youtubePosts.length === 0 && (\n                  <div className=\"text-center py-12\">\n                    <svg className=\"w-16 h-16 text-gray-500 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                    </svg>\n                    <p className=\"text-gray-400 mb-4\">No content available yet</p>\n                    <p className=\"text-gray-500 text-sm\">Content will appear automatically when API keys are configured</p>\n                  </div>\n                )}\n              </>\n            )}\n            \n            {/* Instagram CTA */}\n            <div className=\"text-center\">\n              <a \n                href=\"https://www.instagram.com/earld.kaiju/\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-pink-600 to-purple-600 text-white rounded-xl hover:from-pink-700 hover:to-purple-700 transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-pink-500/30\"\n                data-testid=\"link-instagram\"\n              >\n                <i className=\"fab fa-instagram text-2xl\"></i>\n                <span className=\"font-semibold\">Follow on Instagram</span>\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n\n          {/* How It Works */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-center mb-12 text-[#39FF14] drop-shadow-[0_0_20px_#39FF14]\" data-testid=\"section-title-how-it-works\">How It Works</h2>\n            <div className=\"grid md:grid-cols-4 gap-8\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 text-xl font-bold text-black shadow-lg shadow-[#39FF14]/50\">1</div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"step-1-title\">Quick Intake</h3>\n                <p className=\"text-gray-300 text-sm\">Discuss goals, any injuries, and preferred schedule</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 text-xl font-bold text-black shadow-lg shadow-[#39FF14]/50\">2</div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"step-2-title\">Personalized Plan</h3>\n                <p className=\"text-gray-300 text-sm\">Custom 2-6 week roadmap based on your objectives</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 text-xl font-bold text-black shadow-lg shadow-[#39FF14]/50\">3</div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"step-3-title\">Measurable Progress</h3>\n                <p className=\"text-gray-300 text-sm\">Track technique list and confidence markers</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-[#39FF14] rounded-full flex items-center justify-center mx-auto mb-4 text-xl font-bold text-black shadow-lg shadow-[#39FF14]/50\">4</div>\n                <h3 className=\"text-lg font-bold mb-2\" data-testid=\"step-4-title\">Ongoing Support</h3>\n                <p className=\"text-gray-300 text-sm\">Continued guidance and skill development</p>\n              </div>\n            </div>\n          </div>\n\n          {/* FAQ */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-center mb-12 text-[#39FF14] drop-shadow-[0_0_20px_#39FF14]\" data-testid=\"section-title-faq\">Frequently Asked Questions</h2>\n            <div className=\"max-w-3xl mx-auto\">\n              <Accordion type=\"single\" collapsible className=\"space-y-4\">\n                <AccordionItem value=\"experience\" className=\"bg-white/10 backdrop-blur rounded-xl border border-white/20 px-6\">\n                  <AccordionTrigger className=\"text-left hover:no-underline\" data-testid=\"faq-experience-trigger\">\n                    Do I need experience to start?\n                  </AccordionTrigger>\n                  <AccordionContent className=\"text-gray-300 pb-6\" data-testid=\"faq-experience-content\">\n                    No experience necessary! Most of my clients start from zero. I specialize in teaching beginners with a patient, technical approach that prioritizes safety and understanding.\n                  </AccordionContent>\n                </AccordionItem>\n                \n                <AccordionItem value=\"gi-nogi\" className=\"bg-white/10 backdrop-blur rounded-xl border border-white/20 px-6\">\n                  <AccordionTrigger className=\"text-left hover:no-underline\" data-testid=\"faq-gi-trigger\">\n                    Gi or No-Gi training?\n                  </AccordionTrigger>\n                  <AccordionContent className=\"text-gray-300 pb-6\" data-testid=\"faq-gi-content\">\n                    Either! I'll advise based on your goals. Gi training emphasizes grips and patience, while No-Gi focuses on movement and athleticism. We can do both or focus on your preference.\n                  </AccordionContent>\n                </AccordionItem>\n                \n                <AccordionItem value=\"location\" className=\"bg-white/10 backdrop-blur rounded-xl border border-white/20 px-6\">\n                  <AccordionTrigger className=\"text-left hover:no-underline\" data-testid=\"faq-location-trigger\">\n                    Where do we train?\n                  </AccordionTrigger>\n                  <AccordionContent className=\"text-gray-300 pb-6\" data-testid=\"faq-location-content\">\n                    Local mats and gym facilities in Morris County, or I can come to your location (travel fee may apply). I'll help coordinate the best training space for your needs.\n                  </AccordionContent>\n                </AccordionItem>\n                \n                <AccordionItem value=\"equipment\" className=\"bg-white/10 backdrop-blur rounded-xl border border-white/20 px-6\">\n                  <AccordionTrigger className=\"text-left hover:no-underline\" data-testid=\"faq-equipment-trigger\">\n                    What should I bring?\n                  </AccordionTrigger>\n                  <AccordionContent className=\"text-gray-300 pb-6\" data-testid=\"faq-equipment-content\">\n                    Just bring water and comfortable athletic clothes. I can provide a loaner gi if needed. I'll give you a full equipment list after our initial consultation.\n                  </AccordionContent>\n                </AccordionItem>\n              </Accordion>\n            </div>\n          </div>\n\n\n\n          {/* Booking Form */}\n          <div id=\"booking\" className=\"max-w-2xl mx-auto\">\n            <div className=\"bg-white/10 backdrop-blur rounded-2xl p-8 border border-white/20\">\n              <h2 className=\"text-2xl font-bold text-center mb-8 text-[#39FF14] drop-shadow-[0_0_20px_#39FF14]\" data-testid=\"booking-form-title\">Book Your First Session</h2>\n              \n              {isSubmitted ? (\n                <div className=\"text-center py-12\" data-testid=\"booking-success\">\n                  <div className=\"w-20 h-20 bg-[#39FF14]/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                    <svg className=\"w-10 h-10 text-[#39FF14]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-[#39FF14] mb-4\">Thank You!</h3>\n                  <p className=\"text-white mb-2 text-lg\">Your booking request has been submitted successfully.</p>\n                  <p className=\"text-gray-300 mb-6\">I'll contact you within 24 hours to confirm your session details and answer any questions.</p>\n                  <Button \n                    onClick={() => setIsSubmitted(false)}\n                    className=\"bg-[#39FF14] hover:bg-[#39FF14]/90 text-black font-semibold px-8 py-2\"\n                    data-testid=\"button-book-another\"\n                  >\n                    Book Another Session\n                  </Button>\n                </div>\n              ) : (\n                <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel className=\"text-white\">Full Name *</FormLabel>\n                          <FormControl>\n                            <Input \n                              {...field} \n                              className=\"bg-white/20 border-white/30 text-white placeholder-gray-300\"\n                              placeholder=\"Your name\"\n                              data-testid=\"input-name\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={form.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel className=\"text-white\">Email *</FormLabel>\n                          <FormControl>\n                            <Input \n                              {...field} \n                              type=\"email\"\n                              className=\"bg-white/20 border-white/30 text-white placeholder-gray-300\"\n                              placeholder=\"your.email@example.com\"\n                              data-testid=\"input-email\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"phone\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-white\">Phone Number *</FormLabel>\n                        <FormControl>\n                          <Input \n                            {...field} \n                            type=\"tel\"\n                            className=\"bg-white/20 border-white/30 text-white placeholder-gray-300\"\n                            placeholder=\"(555) 123-4567\"\n                            data-testid=\"input-phone\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"program\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-white\">Interested Program</FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value}>\n                          <FormControl>\n                            <SelectTrigger className=\"bg-white/20 border-white/30 text-white\" data-testid=\"select-program\">\n                              <SelectValue placeholder=\"Select a program\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"adult-trial\">Adult Trial Session ($80)</SelectItem>\n                            <SelectItem value=\"adult-starter\">Adult Starter Pack ($300)</SelectItem>\n                            <SelectItem value=\"kids-trial\">Kids Trial Session ($70)</SelectItem>\n                            <SelectItem value=\"parent-child\">Parent-and-Me Session ($90)</SelectItem>\n                            <SelectItem value=\"small-group\">Small Group Training</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"goals\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-white\">Goals & Experience</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            {...field}\n                            value={field.value ?? ''}\n                            className=\"bg-white/20 border-white/30 text-white placeholder-gray-300\"\n                            placeholder=\"Tell me about your goals, any previous experience, injuries, or questions...\"\n                            rows={4}\n                            data-testid=\"textarea-goals\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"availability\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"text-white\">Preferred Times</FormLabel>\n                        <FormControl>\n                          <Input \n                            {...field}\n                            value={field.value ?? ''}\n                            className=\"bg-white/20 border-white/30 text-white placeholder-gray-300\"\n                            placeholder=\"e.g., Weekday evenings, Saturday mornings\"\n                            data-testid=\"input-availability\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"smsConsent\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                            className=\"bg-white/20 border-white/30\"\n                            data-testid=\"checkbox-sms-consent\"\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel className=\"text-sm text-gray-300 leading-relaxed\">\n                            I agree to receive text messages about scheduling and training updates. Text messaging originator opt-in data will not be shared with third parties. Reply STOP to opt out.*\n                          </FormLabel>\n                          <FormMessage />\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <Button \n                    type=\"submit\" \n                    disabled={isSubmitting || bookingMutation.isPending}\n                    className=\"w-full py-4 bg-[#39FF14] text-white hover:bg-[#39FF14]/80 disabled:opacity-50\"\n                    data-testid=\"button-submit-booking\"\n                  >\n                    {isSubmitting || bookingMutation.isPending ? (\n                      <>\n                        <i className=\"fas fa-spinner fa-spin mr-2\"></i>\n                        Submitting...\n                      </>\n                    ) : (\n                      <>\n                        <i className=\"fas fa-paper-plane mr-2\"></i>\n                        Request Session\n                      </>\n                    )}\n                  </Button>\n                  \n                  <p className=\"text-center text-sm text-gray-400\" data-testid=\"text-follow-up\">\n                    I'll text and email you within 24 hours to confirm your session details.\n                  </p>\n                </form>\n                </Form>\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Schema.org JSON-LD for BJJ Service */}\n      <script \n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Service\",\n            \"name\": \"Private Brazilian Jiu-Jitsu Lessons\",\n            \"description\": \"One-on-one and small-group BJJ training for adults and kids in Morris County, NJ\",\n            \"provider\": {\n              \"@type\": \"Person\",\n              \"name\": \"Earl Hickson Jr.\",\n              \"alternateName\": \"Earl the Kaiju\"\n            },\n            \"areaServed\": {\n              \"@type\": \"Place\",\n              \"name\": \"Morris County, NJ\"\n            },\n            \"offers\": [\n              {\n                \"@type\": \"Offer\",\n                \"name\": \"Adult Trial Session\",\n                \"price\": \"80\",\n                \"priceCurrency\": \"USD\"\n              },\n              {\n                \"@type\": \"Offer\", \n                \"name\": \"Kids Trial Session\",\n                \"price\": \"70\",\n                \"priceCurrency\": \"USD\"\n              }\n            ]\n          })\n        }}\n      />\n    </div>\n  );\n}\n","size_bytes":51367},"client/src/pages/home.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport WinTile from \"@/components/ui/win-tile\";\nimport TechBadge from \"@/components/ui/tech-badge\";\nimport BlogCard from \"@/components/ui/blog-card\";\nimport { blogPosts } from \"@/data/blog-posts\";\n\nexport default function Home() {\n  const featuredPosts = blogPosts.filter(post => post.featured).slice(0, 2);\n\n  return (\n    <div className=\"pt-16\">\n      {/* Hero Section */}\n      <section className=\"pt-16 pb-20 bg-gradient-to-br from-gray-50 via-white to-blue-50 min-h-screen flex items-center\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"animate-slide-up\">\n              <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium mb-6\">\n                <i className=\"fas fa-code mr-2\"></i>\n                Available for Senior Front-End Engineering Roles\n              </div>\n              <h1 className=\"text-6xl lg:text-8xl font-bold leading-tight mb-6\">\n                <span className=\"gradient-text\" data-testid=\"hero-title-primary\">Senior Front-End Engineer</span>\n              </h1>\n              <h3 className=\"text-xl lg:text-2xl text-gray-900 mb-6\" data-testid=\"hero-title-secondary\">\n                React • JavaScript • UI/UX • Expanding into Full-Stack\n              </h3>\n              <p className=\"text-xl text-gray-600 mb-8 leading-relaxed\" data-testid=\"hero-description\">\n                Versatile Front-End Engineer with 6+ years creating responsive, accessible, high-performing web applications. \n                Proven track record of delivering measurable results and performance improvements.\n                Based in Parsippany, New Jersey.\n              </p>\n              \n              {/* CTAs */}\n              <div className=\"flex flex-col sm:flex-row gap-4 mb-12\">\n                <Button asChild size=\"lg\" className=\"bg-primary-500 hover:bg-primary-600\" data-testid=\"button-case-studies\">\n                  <Link href=\"/case-studies\">\n                    <i className=\"fas fa-rocket mr-2\"></i>\n                    View Front-End Case Studies\n                  </Link>\n                </Button>\n                <Button asChild variant=\"outline\" size=\"lg\" data-testid=\"button-resume\">\n                  <a href=\"/Earl_Hickson_Resume_2025.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fas fa-download mr-2\"></i>\n                    Download Resume (PDF)\n                  </a>\n                </Button>\n              </div>\n\n              {/* Tech Stack Badges */}\n              <div className=\"flex flex-wrap gap-2\">\n                <TechBadge name=\"React\" color=\"blue\" />\n                <TechBadge name=\"JavaScript ES6+\" color=\"yellow\" />\n                <TechBadge name=\"HTML5/CSS3\" color=\"orange\" />\n                <TechBadge name=\"Bootstrap 5\" color=\"purple\" />\n                <TechBadge name=\"Node.js\" color=\"green\" />\n                <TechBadge name=\"MongoDB\" color=\"green\" />\n                <TechBadge name=\"WCAG 2.1\" color=\"orange\" />\n              </div>\n            </div>\n\n            {/* Profile Image */}\n            <div className=\"relative animate-float\">\n              <img \n                src=\"/images/meAnimated.png\" \n                alt=\"Earl Hickson Jr. - Professional headshot of a Front-End Engineer\" \n                className=\"w-full max-w-md mx-auto rounded-3xl shadow-2xl\"\n                data-testid=\"hero-image\"\n              />\n              <div className=\"absolute -top-4 -right-4 w-24 h-24 bg-primary-500 rounded-full flex items-center justify-center text-white text-2xl animate-bounce\">\n                <i className=\"fas fa-laptop-code\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Win Tiles Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-4\" data-testid=\"section-title-results\">Proven Results</h2>\n            <p className=\"text-xl text-gray-600\">Recent wins and measurable impact across projects</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <WinTile\n              icon=\"fas fa-tachometer-alt\"\n              title=\"Performance Optimization\"\n              metric=\"Time to Interactive\"\n              improvement=\"44% ↓\"\n              description=\"Employee Directory: Normalized API adapters, suspense-friendly fetch patterns, and skeleton states reduced TTI from 2.1s to 1.2s\"\n              stack=\"Stack: Next.js • React • TypeScript\"\n              bgColor=\"bg-gradient-to-br from-green-50 to-emerald-50\"\n              iconColor=\"bg-green-500\"\n              metricColor=\"text-green-600\"\n            />\n            \n            <WinTile\n              icon=\"fas fa-universal-access\"\n              title=\"WCAG Compliance\"\n              metric=\"Accessibility Score\"\n              improvement=\"AA Level\"\n              description=\"Implemented comprehensive a11y patterns: focus management, ARIA labels, keyboard navigation, and color contrast improvements\"\n              stack=\"Tools: axe-core • WAVE • VoiceOver\"\n              bgColor=\"bg-gradient-to-br from-blue-50 to-indigo-50\"\n              iconColor=\"bg-blue-500\"\n              metricColor=\"text-blue-600\"\n            />\n            \n            <WinTile\n              icon=\"fas fa-compress-alt\"\n              title=\"Bundle Optimization\"\n              metric=\"Bundle Size Reduction\"\n              improvement=\"73% ↓\"\n              description=\"Code splitting, tree shaking, and dynamic imports reduced initial bundle from 1.2MB to 320KB across portfolio projects\"\n              stack=\"Tools: Webpack • Vite • Bundle Analyzer\"\n              bgColor=\"bg-gradient-to-br from-purple-50 to-violet-50\"\n              iconColor=\"bg-purple-500\"\n              metricColor=\"text-purple-600\"\n            />\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-4\" data-testid=\"section-title-services\">Services & Expertise</h2>\n            <p className=\"text-xl text-gray-600\">What I bring to your engineering team</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div className=\"bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow duration-300\">\n              <i className=\"fas fa-cogs text-primary-500 text-2xl mb-4\"></i>\n              <h3 className=\"font-bold mb-2\" data-testid=\"service-ui-engineering\">UI Engineering</h3>\n              <p className=\"text-sm text-gray-600\">Component libraries, design tokens, responsive systems</p>\n            </div>\n            <div className=\"bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow duration-300\">\n              <i className=\"fas fa-cubes text-primary-500 text-2xl mb-4\"></i>\n              <h3 className=\"font-bold mb-2\" data-testid=\"service-design-systems\">Design Systems</h3>\n              <p className=\"text-sm text-gray-600\">Scalable component architectures, documentation, governance</p>\n            </div>\n            <div className=\"bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow duration-300\">\n              <i className=\"fas fa-universal-access text-primary-500 text-2xl mb-4\"></i>\n              <h3 className=\"font-bold mb-2\" data-testid=\"service-accessibility\">Accessibility</h3>\n              <p className=\"text-sm text-gray-600\">WCAG compliance, screen reader support, inclusive design</p>\n            </div>\n            <div className=\"bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-shadow duration-300\">\n              <i className=\"fas fa-rocket text-primary-500 text-2xl mb-4\"></i>\n              <h3 className=\"font-bold mb-2\" data-testid=\"service-performance\">Performance</h3>\n              <p className=\"text-sm text-gray-600\">Core Web Vitals, bundle optimization, caching strategies</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Blog Posts */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-4\" data-testid=\"section-title-blog\">Latest Insights</h2>\n            <p className=\"text-xl text-gray-600\">From the intersection of development and Brazilian Jiu-Jitsu</p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-8 mb-12\">\n            {featuredPosts.map((post) => (\n              <BlogCard key={post.id} post={post} featured={true} />\n            ))}\n          </div>\n\n          <div className=\"text-center\">\n            <Button asChild variant=\"outline\" data-testid=\"button-view-all-posts\">\n              <Link href=\"/blog\">\n                View All Posts\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-8\" data-testid=\"cta-title\">Ready to Work Together?</h2>\n          <p className=\"text-xl text-gray-600 mb-12\">\n            Let's discuss how I can contribute to your development team and help build exceptional user experiences.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-6 justify-center\">\n            <Button asChild size=\"lg\" className=\"bg-primary-500 hover:bg-primary-600\" data-testid=\"button-contact\">\n              <a href=\"mailto:e@ehicksonjr.com\">\n                <i className=\"fas fa-envelope mr-3\"></i>\n                Get In Touch\n              </a>\n            </Button>\n            \n            <div className=\"flex gap-4\">\n              <Button asChild variant=\"outline\" size=\"lg\" data-testid=\"button-linkedin\">\n                <a href=\"https://linkedin.com/in/earl-hickson-jr\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-linkedin mr-3\"></i>\n                  LinkedIn\n                </a>\n              </Button>\n              \n              <Button asChild variant=\"outline\" size=\"lg\" data-testid=\"button-github\">\n                <a href=\"https://github.com/ehicksonjr\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-github mr-3\"></i>\n                  GitHub\n                </a>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":10968},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/layout/footer.tsx":{"content":"import { Link } from \"wouter\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white py-16\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid md:grid-cols-4 gap-8\">\n          <div className=\"md:col-span-2\">\n            <h3 className=\"text-xl font-bold mb-4 gradient-text\">Earl Hickson Jr.</h3>\n            <p className=\"text-gray-300 mb-4\">\n              Senior Front-End Engineer specializing in React, JavaScript, UI/UX, and expanding into full-stack development. Based in Parsippany, New Jersey.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"https://linkedin.com/in/earl-hickson-jr\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center hover:bg-blue-700 transition-colors\"\n                data-testid=\"link-linkedin\"\n              >\n                <i className=\"fab fa-linkedin\"></i>\n              </a>\n              <a \n                href=\"https://github.com/ehicksonjr\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"w-10 h-10 bg-gray-700 rounded-full flex items-center justify-center hover:bg-gray-600 transition-colors\"\n                data-testid=\"link-github\"\n              >\n                <i className=\"fab fa-github\"></i>\n              </a>\n              <a \n                href=\"https://www.instagram.com/earld.kaiju/\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center hover:opacity-90 transition-opacity\"\n                data-testid=\"link-instagram\"\n              >\n                <i className=\"fab fa-instagram\"></i>\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Quick Links</h4>\n            <ul className=\"space-y-2 text-gray-300\">\n              <li><Link href=\"/case-studies\" className=\"hover:text-white transition-colors\" data-testid=\"footer-case-studies\">Case Studies</Link></li>\n              <li><Link href=\"/about\" className=\"hover:text-white transition-colors\" data-testid=\"footer-about\">About</Link></li>\n              <li><Link href=\"/blog\" className=\"hover:text-white transition-colors\" data-testid=\"footer-blog\">Blog</Link></li>\n              <li><Link href=\"/earldkaiju\" className=\"hover:text-white transition-colors\" data-testid=\"footer-bjj\">BJJ Lessons</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Contact</h4>\n            <ul className=\"space-y-2 text-gray-300\">\n              <li data-testid=\"text-location\">Parsippany, NJ</li>\n              <li>\n                <a \n                  href=\"mailto:e@ehicksonjr.com\" \n                  className=\"hover:text-white transition-colors\"\n                  data-testid=\"link-email\"\n                >\n                  e@ehicksonjr.com\n                </a>\n              </li>\n              <li>\n                <a \n                  href=\"/api/resume\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"hover:text-white transition-colors\"\n                  data-testid=\"link-resume\"\n                >\n                  Download Resume\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-800 pt-8 mt-12 text-center text-gray-400\">\n          <p data-testid=\"text-copyright\">&copy; 2024 Earl Hickson Jr. All rights reserved. Built with passion and precision.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":3883},"client/src/components/layout/header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigation = [\n    { name: \"Home\", href: \"/\" },\n    { name: \"Case Studies\", href: \"/case-studies\" },\n    { name: \"About\", href: \"/about\" },\n    { name: \"Blog\", href: \"/blog\" },\n    { name: \"BJJ Lessons\", href: \"/earldkaiju\" },\n  ];\n\n  return (\n    <nav className=\"fixed top-0 w-full bg-white/80 backdrop-blur-md border-b border-gray-200 z-50\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex-shrink-0\">\n            <Link href=\"/\" className=\"text-xl font-bold gradient-text\" data-testid=\"logo-link\">\n              Earl Hickson Jr.\n            </Link>\n          </div>\n          \n          {/* Desktop Navigation */}\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-8\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={`text-gray-700 hover:text-primary-500 transition-colors duration-200 ${\n                    location === item.href ? \"text-primary-500 font-medium\" : \"\"\n                  }`}\n                  data-testid={`nav-${item.name.toLowerCase().replace(\" \", \"-\")}`}\n                >\n                  {item.name}\n                </Link>\n              ))}\n              <Button \n                asChild \n                className=\"bg-primary-500 text-white hover:bg-primary-600\"\n                data-testid=\"button-resume\"\n              >\n                <a href=\"/api/resume\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Resume\n                </a>\n              </Button>\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <Sheet open={isOpen} onOpenChange={setIsOpen}>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\" data-testid=\"button-mobile-menu\">\n                  <i className=\"fas fa-bars text-xl\"></i>\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px]\">\n                <div className=\"flex flex-col space-y-4 mt-8\">\n                  {navigation.map((item) => (\n                    <Link\n                      key={item.name}\n                      href={item.href}\n                      className={`text-lg px-3 py-2 text-gray-700 hover:text-primary-500 transition-colors ${\n                        location === item.href ? \"text-primary-500 font-medium\" : \"\"\n                      }`}\n                      onClick={() => setIsOpen(false)}\n                      data-testid={`mobile-nav-${item.name.toLowerCase().replace(\" \", \"-\")}`}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                  <Button \n                    asChild \n                    className=\"bg-primary-500 text-white hover:bg-primary-600 mx-3\"\n                    data-testid=\"button-mobile-resume\"\n                  >\n                    <a href=\"/api/resume\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      Resume\n                    </a>\n                  </Button>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":3689},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/blog-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { BlogPost } from \"@/data/blog-posts\";\n\ninterface BlogCardProps {\n  post: BlogPost;\n  featured?: boolean;\n}\n\nexport default function BlogCard({ post, featured = false }: BlogCardProps) {\n  const categoryColors = {\n    bjj: \"bg-purple-100 text-purple-700\",\n    development: \"bg-blue-100 text-blue-700\",\n    general: \"bg-gray-100 text-gray-700\"\n  };\n\n  const featuredColors = {\n    bjj: \"bg-gradient-to-br from-purple-50 to-violet-50 border-purple-200\",\n    development: \"bg-gradient-to-br from-blue-50 to-indigo-50 border-blue-200\",\n    general: \"bg-gradient-to-br from-gray-50 to-slate-50 border-gray-200\"\n  };\n\n  const linkColors = {\n    bjj: \"text-purple-600 hover:text-purple-700\",\n    development: \"text-blue-600 hover:text-blue-700\",\n    general: \"text-gray-600 hover:text-gray-700\"\n  };\n\n  if (featured && post.featured) {\n    return (\n      <article className={`${featuredColors[post.category]} rounded-2xl p-6 border`}>\n        <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-medium mb-4\">\n          <i className=\"fas fa-star mr-1\"></i>\n          NEW POST\n        </div>\n        <h3 className=\"text-xl font-bold mb-3\">\n          <Link \n            href={`/articles/${post.slug}`} \n            className={`hover:${linkColors[post.category]} transition-colors`}\n            data-testid={`link-${post.id}`}\n          >\n            {post.title}\n          </Link>\n        </h3>\n        <p className=\"text-gray-600 mb-4 text-sm\" data-testid={`excerpt-${post.id}`}>\n          {post.excerpt}\n        </p>\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-xs text-gray-500\" data-testid={`date-${post.id}`}>{post.publishedAt}</span>\n          <Link \n            href={`/articles/${post.slug}`} \n            className={`${linkColors[post.category]} font-medium text-sm transition-colors`}\n            data-testid={`read-more-${post.id}`}\n          >\n            Read More →\n          </Link>\n        </div>\n      </article>\n    );\n  }\n\n  return (\n    <article className=\"bg-gray-50 rounded-2xl p-6\">\n      <div className={`inline-flex items-center px-2 py-1 rounded-full ${categoryColors[post.category]} text-xs font-medium mb-3`}>\n        {post.category.toUpperCase()}\n      </div>\n      <h3 className=\"text-lg font-bold mb-3\">\n        <Link \n          href={`/articles/${post.slug}`} \n          className=\"hover:text-primary-500 transition-colors\"\n          data-testid={`link-${post.id}`}\n        >\n          {post.title}\n        </Link>\n      </h3>\n      <p className=\"text-gray-600 mb-4 text-sm\" data-testid={`excerpt-${post.id}`}>\n        {post.excerpt}\n      </p>\n      <div className=\"flex items-center justify-between\">\n        <span className=\"text-xs text-gray-500\" data-testid={`date-${post.id}`}>{post.publishedAt}</span>\n        <div className=\"flex items-center gap-4\">\n          <span className=\"text-xs text-gray-500\" data-testid={`read-time-${post.id}`}>{post.readTime} min read</span>\n          <Link \n            href={`/articles/${post.slug}`} \n            className=\"text-primary-500 font-medium text-sm hover:text-primary-600 transition-colors\"\n            data-testid={`read-more-${post.id}`}\n          >\n            Read More →\n          </Link>\n        </div>\n      </div>\n    </article>\n  );\n}\n","size_bytes":3357},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/case-study-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { Project } from \"@/data/projects\";\n\ninterface CaseStudyCardProps {\n  project: Project;\n  featured?: boolean;\n}\n\nexport default function CaseStudyCard({ project, featured = false }: CaseStudyCardProps) {\n  if (featured) {\n    return (\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-3xl p-8 lg:p-12\">\n        <div className=\"grid lg:grid-cols-5 gap-8\">\n          <div className=\"lg:col-span-3\">\n            <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-medium mb-4\">\n              <i className=\"fas fa-star mr-2\"></i>\n              Featured Project\n            </div>\n            <h3 className=\"text-2xl lg:text-3xl font-bold mb-4\" data-testid={`title-${project.id}`}>\n              {project.title}\n            </h3>\n            <p className=\"text-lg text-gray-600 mb-6\" data-testid={`description-${project.id}`}>\n              {project.description}\n            </p>\n            \n            <div className=\"space-y-4 mb-8\">\n              <div className=\"flex items-start\">\n                <div className=\"w-6 h-6 bg-red-100 rounded-full flex items-center justify-center mt-1 mr-3 flex-shrink-0\">\n                  <i className=\"fas fa-exclamation-triangle text-red-600 text-xs\"></i>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Problem</h4>\n                  <p className=\"text-gray-600 text-sm\" data-testid={`problem-${project.id}`}>{project.problem}</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center mt-1 mr-3 flex-shrink-0\">\n                  <i className=\"fas fa-cog text-blue-600 text-xs\"></i>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Solution</h4>\n                  <p className=\"text-gray-600 text-sm\" data-testid={`solution-${project.id}`}>{project.solution}</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mt-1 mr-3 flex-shrink-0\">\n                  <i className=\"fas fa-chart-line text-green-600 text-xs\"></i>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Result</h4>\n                  <p className=\"text-gray-600 text-sm\" data-testid={`result-${project.id}`}>{project.result}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex flex-wrap gap-4 mb-6\">\n              {project.links.demo && (\n                <a \n                  href={project.links.demo} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center text-primary-500 font-semibold hover:text-primary-600\"\n                  data-testid={`link-demo-${project.id}`}\n                >\n                  <i className=\"fas fa-external-link-alt mr-2\"></i>\n                  Live Demo\n                </a>\n              )}\n              {project.links.repo && (\n                <a \n                  href={project.links.repo} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center text-gray-600 font-semibold hover:text-gray-800\"\n                  data-testid={`link-repo-${project.id}`}\n                >\n                  <i className=\"fab fa-github mr-2\"></i>\n                  View Code\n                </a>\n              )}\n            </div>\n          </div>\n          \n          {/* Spec Sheet */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-2xl p-6 shadow-sm\">\n              <h4 className=\"font-bold text-gray-900 mb-4\">Technical Specification</h4>\n              <div className=\"space-y-3 text-sm\">\n                {project.stack.map((tech, index) => (\n                  <div key={index}>\n                    <span className=\"text-gray-500\">\n                      {index === 0 ? \"Framework:\" : index === 1 ? \"Styling:\" : index === 2 ? \"APIs:\" : \"Other:\"}\n                    </span>\n                    <span className=\"text-gray-900 ml-2\" data-testid={`tech-${project.id}-${index}`}>{tech}</span>\n                  </div>\n                ))}\n              </div>\n              \n              {project.features && (\n                <div className=\"mt-6 pt-4 border-t border-gray-100\">\n                  <h5 className=\"font-semibold text-gray-900 mb-2\">Key Features</h5>\n                  <ul className=\"text-xs text-gray-600 space-y-1\">\n                    {project.features.map((feature, index) => (\n                      <li key={index} data-testid={`feature-${project.id}-${index}`}>• {feature}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid lg:grid-cols-3 gap-8 items-center\">\n      <div className=\"lg:col-span-2\">\n        <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-purple-100 text-purple-700 text-sm font-medium mb-4\">\n          <i className=\"fas fa-palette mr-2\"></i>\n          {project.category}\n        </div>\n        <h3 className=\"text-xl lg:text-2xl font-bold mb-3\" data-testid={`title-${project.id}`}>\n          {project.title}\n        </h3>\n        <p className=\"text-gray-600 mb-4\" data-testid={`description-${project.id}`}>\n          {project.description}\n        </p>\n        \n        <div className=\"space-y-3 mb-6 text-sm\">\n          <div><strong>Challenge:</strong> <span data-testid={`problem-${project.id}`}>{project.problem}</span></div>\n          <div><strong>Approach:</strong> <span data-testid={`solution-${project.id}`}>{project.solution}</span></div>\n          <div><strong>Impact:</strong> <span data-testid={`result-${project.id}`}>{project.result}</span></div>\n        </div>\n\n        <div className=\"flex gap-4 mb-4\">\n          {project.links.demo && (\n            <a \n              href={project.links.demo} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-primary-500 font-medium hover:text-primary-600\"\n              data-testid={`link-demo-${project.id}`}\n            >\n              Live Site\n            </a>\n          )}\n          {project.links.repo && (\n            <a \n              href={project.links.repo} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-gray-600 font-medium hover:text-gray-800\"\n              data-testid={`link-repo-${project.id}`}\n            >\n              Repository\n            </a>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"bg-gray-100 rounded-2xl p-6\">\n        <div className=\"text-sm text-gray-600 mb-4\">Tech Stack</div>\n        <div className=\"space-y-2\">\n          {project.stack.slice(0, 4).map((tech, index) => (\n            <div key={index} className=\"flex justify-between\">\n              <span className=\"text-sm\" data-testid={`tech-${project.id}-${index}`}>{tech}</span>\n              <span className=\"text-xs text-gray-500\">\n                {index === 0 ? \"Framework\" : index === 1 ? \"Styling\" : index === 2 ? \"Tools\" : \"Platform\"}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7599},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/tech-badge.tsx":{"content":"interface TechBadgeProps {\n  name: string;\n  color: string;\n}\n\nexport default function TechBadge({ name, color }: TechBadgeProps) {\n  const colorClasses = {\n    red: \"bg-red-100 text-red-700\",\n    blue: \"bg-blue-100 text-blue-700\",\n    cyan: \"bg-cyan-100 text-cyan-700\",\n    purple: \"bg-purple-100 text-purple-700\",\n    green: \"bg-green-100 text-green-700\",\n    orange: \"bg-orange-100 text-orange-700\",\n    yellow: \"bg-yellow-100 text-yellow-700\",\n    gray: \"bg-gray-100 text-gray-700\"\n  };\n\n  return (\n    <span \n      className={`px-3 py-1 ${colorClasses[color as keyof typeof colorClasses]} rounded-full text-sm font-medium`}\n      data-testid={`badge-${name.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      {name}\n    </span>\n  );\n}\n","size_bytes":738},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/ui/win-tile.tsx":{"content":"interface WinTileProps {\n  icon: string;\n  title: string;\n  metric: string;\n  improvement: string;\n  description: string;\n  stack: string;\n  bgColor: string;\n  iconColor: string;\n  metricColor: string;\n}\n\nexport default function WinTile({\n  icon,\n  title,\n  metric,\n  improvement,\n  description,\n  stack,\n  bgColor,\n  iconColor,\n  metricColor\n}: WinTileProps) {\n  return (\n    <div className={`${bgColor} p-8 rounded-2xl border hover:shadow-lg transition-shadow duration-300`}>\n      <div className={`w-12 h-12 ${iconColor} rounded-xl flex items-center justify-center mb-6`}>\n        <i className={`${icon} text-white text-xl`}></i>\n      </div>\n      <h3 className=\"text-xl font-bold mb-3\" data-testid={`title-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n        {title}\n      </h3>\n      <div className=\"mb-4\">\n        <div className={`text-3xl font-bold ${metricColor} mb-1`} data-testid={`metric-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n          {improvement}\n        </div>\n        <div className=\"text-sm text-gray-600\" data-testid={`metric-label-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n          {metric}\n        </div>\n      </div>\n      <p className=\"text-gray-700 text-sm leading-relaxed mb-4\" data-testid={`description-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n        {description}\n      </p>\n      <div className=\"text-xs text-gray-500\" data-testid={`stack-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n        {stack}\n      </div>\n    </div>\n  );\n}\n","size_bytes":1485},"README.md":{"content":"# Earl Hickson Jr. - Professional Portfolio\n\nA modern, responsive portfolio website for Earl Hickson Jr., Senior Front-End Engineer and Brazilian Jiu-Jitsu black belt instructor.\n\n## 🚀 Live Site\n\n**[ehicksonjr.com](https://ehicksonjr.com)**\n\n## 🏗️ Built With\n\n- **Next.js 13** - React framework with App Router\n- **TypeScript** - Type-safe development\n- **Tailwind CSS** - Modern styling and responsive design\n- **GitHub Pages** - Static hosting with GitHub Actions deployment\n- **Font Awesome** - Professional iconography\n\n## 📁 Project Structure\n\n```\n├── app/                    # Next.js App Router pages\n│   ├── about/              # About page\n│   ├── blog/               # Blog posts\n│   ├── case-studies/       # Engineering case studies\n│   ├── contact/            # Contact information\n│   ├── earldkaiju/         # BJJ lessons page\n│   ├── articles/[slug]/    # Dynamic article pages\n│   ├── api/resume/         # Resume download endpoint\n│   ├── layout.tsx          # Root layout component\n│   ├── page.tsx            # Homepage\n│   └── globals.css         # Global styles\n├── components/             # Reusable React components\n│   ├── ui/                 # UI primitives (Button, Input, etc.)\n│   └── layout/             # Layout components (Header, Footer)\n├── lib/                    # Utility functions\n├── hooks/                  # Custom React hooks\n├── public/                 # Static assets\n├── .github/workflows/      # GitHub Actions deployment\n└── next.config.mjs         # Next.js configuration\n```\n\n## 🎯 Key Features\n\n### Professional Portfolio\n- **Responsive Design** - Optimized for all devices and screen sizes\n- **Case Studies** - Detailed front-end engineering project showcases\n- **Blog** - Technical articles and insights\n- **Resume Download** - PDF resume accessible via API endpoint\n- **Contact Forms** - Professional inquiry handling\n\n### BJJ Lessons Platform (/earldkaiju)\n- **Private Lesson Booking** - Specialized page for Brazilian Jiu-Jitsu instruction\n- **Instructor Profile** - Black belt credentials and teaching philosophy\n- **Training Programs** - Customized lesson plans and goals\n\n### Technical Excellence\n- **SEO Optimized** - Meta tags, Open Graph, structured data\n- **Accessibility** - WCAG 2.1 compliant design patterns\n- **Performance** - Static generation for optimal loading speeds\n- **Type Safety** - Full TypeScript implementation\n\n## 🔧 Development\n\n### Prerequisites\n- Node.js 18+ (recommended: Node.js 20)\n- npm or yarn package manager\n\n### Getting Started\n\n1. **Clone the repository**\n   ```bash\n   git clone https://github.com/[username]/earl-portfolio.git\n   cd earl-portfolio\n   ```\n\n2. **Install dependencies**\n   ```bash\n   npm install\n   ```\n\n3. **Start development server**\n   ```bash\n   npm run dev\n   ```\n\n4. **Open browser**\n   Navigate to [http://localhost:3000](http://localhost:3000)\n\n### Available Scripts\n\n- `npm run dev` - Start development server\n- `npm run build` - Build for production\n- `npm run start` - Start production server\n- `npm run lint` - Run ESLint\n- `npm run export` - Export static site\n\n## 🚀 Deployment\n\nThis project deploys automatically to **ehicksonjr.com** via GitHub Pages using GitHub Actions.\n\n### Deployment Process\n\n1. **Push to main branch** triggers automatic deployment\n2. **GitHub Actions** builds the Next.js application\n3. **Static export** generates optimized static files\n4. **GitHub Pages** serves the site at ehicksonjr.com\n\n### Custom Domain Setup\n\n- **CNAME file** points to `ehicksonjr.com`\n- **DNS configuration** required for custom domain\n- **HTTPS** automatically provided by GitHub Pages\n\n### Workflow Configuration\n\nThe deployment workflow (`.github/workflows/deploy.yml`) includes:\n- Node.js 20 environment\n- Dependency caching for faster builds\n- Next.js build and export process\n- Automatic deployment to GitHub Pages\n\n## 📧 Contact\n\n**Earl Hickson Jr.**\n- Email: [e@ehicksonjr.com](mailto:e@ehicksonjr.com)\n- LinkedIn: [linkedin.com/in/earlhicksonjr](https://linkedin.com/in/earlhicksonjr)\n- GitHub: [github.com/EHickson-Jr](https://github.com/EHickson-Jr)\n- Location: Parsippany, New Jersey\n\n## 📄 License\n\n© 2025 Earl Hickson Jr. All rights reserved.\n\n---\n\n*Built with passion for clean code, accessible design, and martial arts excellence.*","size_bytes":4430},"next-env.d.ts":{"content":"/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/basic-features/typescript for more information.","size_bytes":200},"app/globals.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 221.2 83.2% 53.3%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96%;\n    --accent-foreground: 222.2 84% 4.9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 221.2 83.2% 53.3%;\n    --radius: 0.5rem;\n\n    /* Custom colors */\n    --primary-50: 239 246 255;\n    --primary-100: 219 234 254;\n    --primary-200: 191 219 254;\n    --primary-300: 147 197 253;\n    --primary-400: 96 165 250;\n    --primary-500: 59 130 246;\n    --primary-600: 37 99 235;\n    --primary-700: 29 78 216;\n    --primary-800: 30 64 175;\n    --primary-900: 30 58 138;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 217.2 91.2% 59.8%;\n    --primary-foreground: 222.2 84% 4.9%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 224.3 76.3% 94.1%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n    font-family: var(--font-inter), system-ui, sans-serif;\n  }\n}\n\n/* Custom Utilities */\n.font-display {\n  font-family: var(--font-inter), system-ui, sans-serif;\n}\n\n.font-mono {\n  font-family: var(--font-jetbrains), 'Courier New', monospace;\n}\n\n/* Gradient Text */\n.gradient-text {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-size: 200% 200%;\n  animation: gradient 3s ease infinite;\n}\n\n@keyframes gradient {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n/* Animations */\n@keyframes slide-up {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-20px); }\n}\n\n.animate-slide-up {\n  animation: slide-up 0.6s ease-out;\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n/* Custom Primary Colors */\n.bg-primary-50 { background-color: rgb(var(--primary-50)); }\n.bg-primary-100 { background-color: rgb(var(--primary-100)); }\n.bg-primary-500 { background-color: rgb(var(--primary-500)); }\n.bg-primary-600 { background-color: rgb(var(--primary-600)); }\n\n.text-primary-500 { color: rgb(var(--primary-500)); }\n.text-primary-600 { color: rgb(var(--primary-600)); }\n\n.hover\\:bg-primary-600:hover { background-color: rgb(var(--primary-600)); }\n.hover\\:text-primary-600:hover { color: rgb(var(--primary-600)); }\n\n/* Card Styles */\n.card-gradient {\n  background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n/* Tech Badge Styles */\n.tech-badge {\n  @apply inline-flex items-center px-3 py-1 rounded-full text-xs font-medium;\n}\n\n.tech-badge.blue {\n  @apply bg-blue-100 text-blue-700;\n}\n\n.tech-badge.yellow {\n  @apply bg-yellow-100 text-yellow-700;\n}\n\n.tech-badge.green {\n  @apply bg-green-100 text-green-700;\n}\n\n.tech-badge.purple {\n  @apply bg-purple-100 text-purple-700;\n}\n\n.tech-badge.orange {\n  @apply bg-orange-100 text-orange-700;\n}\n\n.tech-badge.gray {\n  @apply bg-gray-100 text-gray-700;\n}","size_bytes":4140},"app/layout.tsx":{"content":"import type { Metadata } from 'next'\nimport { Inter, JetBrains_Mono } from 'next/font/google'\nimport './globals.css'\nimport { QueryClient } from '@tanstack/react-query'\nimport { Providers } from './providers'\nimport Header from '@/components/layout/header'\nimport Footer from '@/components/layout/footer'\nimport { Toaster } from '@/components/ui/toaster'\nimport { TooltipProvider } from '@/components/ui/tooltip'\n\nconst inter = Inter({ \n  subsets: ['latin'],\n  variable: '--font-inter',\n})\n\nconst jetbrainsMono = JetBrains_Mono({ \n  subsets: ['latin'],\n  variable: '--font-jetbrains',\n})\n\nexport const metadata: Metadata = {\n  title: 'Earl Hickson Jr. - Senior Front-End Engineer | React • JavaScript • UI/UX • Full-Stack',\n  description: 'Senior Front-End Engineer specializing in React, JavaScript, UI/UX, and expanding into full-stack development. Based in Parsippany, NJ. Available for senior engineering roles.',\n  openGraph: {\n    title: 'Earl Hickson Jr. - Senior Front-End Engineer',\n    description: 'Senior Front-End Engineer specializing in React, JavaScript, UI/UX, and expanding into full-stack development.',\n    type: 'website',\n    url: 'https://www.ehicksonjr.com',\n  },\n  viewport: 'width=device-width, initial-scale=1.0, maximum-scale=1',\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"en\" className={`${inter.variable} ${jetbrainsMono.variable}`}>\n      <head>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"\" />\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" />\n      </head>\n      <body className=\"min-h-screen flex flex-col\">\n        <Providers>\n          <TooltipProvider>\n            <Header />\n            <main className=\"flex-1\">\n              {children}\n            </main>\n            <Footer />\n            <Toaster />\n          </TooltipProvider>\n        </Providers>\n      </body>\n    </html>\n  )\n}","size_bytes":2072},"app/not-found.tsx":{"content":"import Link from 'next/link'\nimport { Button } from '@/components/ui/button'\n\nexport default function NotFound() {\n  return (\n    <div className=\"pt-16 min-h-screen flex items-center justify-center\">\n      <div className=\"text-center max-w-2xl mx-auto px-4\">\n        <h1 className=\"text-4xl font-bold mb-4\" data-testid=\"error-title\">Page Not Found</h1>\n        <p className=\"text-gray-600 mb-8\">\n          The page you're looking for doesn't exist or has been moved.\n        </p>\n        <Button asChild data-testid=\"button-home\">\n          <Link href=\"/\">\n            <i className=\"fas fa-home mr-2\"></i>\n            Back to Home\n          </Link>\n        </Button>\n      </div>\n    </div>\n  )\n}","size_bytes":696},"app/page.tsx":{"content":"import Link from 'next/link'\nimport Image from 'next/image'\nimport { Button } from '@/components/ui/button'\nimport TechBadge from '@/components/ui/tech-badge'\n\nexport default function Home() {\n  return (\n    <div className=\"pt-16\">\n      {/* Hero Section */}\n      <section className=\"pt-16 pb-20 bg-gradient-to-br from-gray-50 via-white to-blue-50 min-h-screen flex items-center\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"animate-slide-up\">\n              <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium mb-6\">\n                <i className=\"fas fa-code mr-2\"></i>\n                Available for Senior Front-End Engineering Roles\n              </div>\n              <h1 className=\"text-6xl lg:text-8xl font-bold leading-tight mb-6\">\n                <span className=\"gradient-text\" data-testid=\"hero-title-primary\">Senior Front-End Engineer</span>\n              </h1>\n              <h3 className=\"text-xl lg:text-2xl text-gray-900 mb-6\" data-testid=\"hero-title-secondary\">\n                React • JavaScript • UI/UX • Expanding into Full-Stack\n              </h3>\n              <p className=\"text-xl text-gray-600 mb-8 leading-relaxed\" data-testid=\"hero-description\">\n                Versatile Front-End Engineer with 6+ years creating responsive, accessible, high-performing web applications. \n                Proven track record: +37% lead conversions, +25% organic traffic, +75% live stream engagement.\n                Based in Parsippany, New Jersey.\n              </p>\n              \n              {/* CTAs */}\n              <div className=\"flex flex-col sm:flex-row gap-4 mb-12\">\n                <Button asChild size=\"lg\" className=\"bg-primary-500 hover:bg-primary-600\" data-testid=\"button-case-studies\">\n                  <Link href=\"/case-studies\">\n                    <i className=\"fas fa-rocket mr-2\"></i>\n                    View Front-End Case Studies\n                  </Link>\n                </Button>\n                <Button asChild variant=\"outline\" size=\"lg\" data-testid=\"button-resume\">\n                  <a href=\"/api/resume\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fas fa-download mr-2\"></i>\n                    Download Resume (PDF)\n                  </a>\n                </Button>\n              </div>\n\n              {/* Tech Stack Badges */}\n              <div className=\"flex flex-wrap gap-2\">\n                <TechBadge name=\"React\" color=\"blue\" />\n                <TechBadge name=\"JavaScript ES6+\" color=\"yellow\" />\n                <TechBadge name=\"HTML5/CSS3\" color=\"orange\" />\n                <TechBadge name=\"Bootstrap 5\" color=\"purple\" />\n                <TechBadge name=\"Node.js\" color=\"green\" />\n                <TechBadge name=\"MongoDB\" color=\"green\" />\n                <TechBadge name=\"WCAG 2.1\" color=\"orange\" />\n                <TechBadge name=\"TypeScript\" color=\"blue\" />\n                <TechBadge name=\"Next.js\" color=\"gray\" />\n              </div>\n\n              {/* Social Proof */}\n              <div className=\"mt-12 pt-8 border-t border-gray-200\">\n                <div className=\"flex items-center gap-8\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-gray-900\">6+</div>\n                    <div className=\"text-sm text-gray-600\">Years Experience</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-gray-900\">+37%</div>\n                    <div className=\"text-sm text-gray-600\">Lead Conversions</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-gray-900\">+25%</div>\n                    <div className=\"text-sm text-gray-600\">Organic Traffic</div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Access */}\n              <div className=\"mt-8 flex flex-col sm:flex-row gap-4\">\n                <Button asChild variant=\"ghost\" className=\"justify-start\" data-testid=\"link-github\">\n                  <a href=\"https://github.com/EHickson-Jr\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-github mr-2\"></i>\n                    GitHub Profile\n                  </a>\n                </Button>\n                <Button asChild variant=\"ghost\" className=\"justify-start\" data-testid=\"link-linkedin\">\n                  <a href=\"https://linkedin.com/in/earlhicksonjr\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin mr-2\"></i>\n                    LinkedIn Profile\n                  </a>\n                </Button>\n              </div>\n            </div>\n\n            {/* Profile Image */}\n            <div className=\"relative animate-float\">\n              <Image \n                src=\"https://www.ehicksonjr.com/_next/static/media/me.edd8b1e7.jpeg\" \n                alt=\"Earl Hickson Jr. - Professional headshot of a Front-End Engineer\" \n                width={500}\n                height={600}\n                className=\"w-full max-w-md mx-auto rounded-3xl shadow-2xl\"\n                data-testid=\"hero-image\"\n                priority\n              />\n              <div className=\"absolute -top-4 -right-4 w-24 h-24 bg-primary-500 rounded-full flex items-center justify-center text-white text-2xl animate-bounce\">\n                <i className=\"fas fa-code\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Navigation Cards */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-4\" data-testid=\"section-title-explore\">Explore My Work</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              From technical case studies to Brazilian Jiu-Jitsu coaching, discover the different facets of my professional journey\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {/* Case Studies */}\n            <Link href=\"/case-studies\" className=\"group\" data-testid=\"card-case-studies\">\n              <div className=\"bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-100\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4 group-hover:bg-blue-200 transition-colors\">\n                  <i className=\"fas fa-rocket text-blue-600 text-xl\"></i>\n                </div>\n                <h3 className=\"text-xl font-semibold mb-2\">Case Studies</h3>\n                <p className=\"text-gray-600 text-sm\">Real projects with measurable results and production code</p>\n              </div>\n            </Link>\n\n            {/* About */}\n            <Link href=\"/about\" className=\"group\" data-testid=\"card-about\">\n              <div className=\"bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-100\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4 group-hover:bg-green-200 transition-colors\">\n                  <i className=\"fas fa-user text-green-600 text-xl\"></i>\n                </div>\n                <h3 className=\"text-xl font-semibold mb-2\">About</h3>\n                <p className=\"text-gray-600 text-sm\">My background, skills, and the BJJ connection to engineering</p>\n              </div>\n            </Link>\n\n            {/* Blog */}\n            <Link href=\"/blog\" className=\"group\" data-testid=\"card-blog\">\n              <div className=\"bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-100\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4 group-hover:bg-purple-200 transition-colors\">\n                  <i className=\"fas fa-pen text-purple-600 text-xl\"></i>\n                </div>\n                <h3 className=\"text-xl font-semibold mb-2\">Blog</h3>\n                <p className=\"text-gray-600 text-sm\">Technical insights and lessons from the mat</p>\n              </div>\n            </Link>\n\n            {/* BJJ Lessons */}\n            <Link href=\"/earldkaiju\" className=\"group\" data-testid=\"card-bjj\">\n              <div className=\"bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300 border border-gray-100\">\n                <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mb-4 group-hover:bg-red-200 transition-colors\">\n                  <i className=\"fas fa-fist-raised text-red-600 text-xl\"></i>\n                </div>\n                <h3 className=\"text-xl font-semibold mb-2\">BJJ Lessons</h3>\n                <p className=\"text-gray-600 text-sm\">Private Brazilian Jiu-Jitsu coaching with a black belt</p>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":9217},"app/providers.tsx":{"content":"'use client'\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { useState, useEffect } from 'react'\n\nconst createQueryClient = () => {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        staleTime: 60 * 1000, // 1 minute\n        refetchOnWindowFocus: false,\n      },\n    },\n  })\n}\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(() => createQueryClient())\n  \n  useEffect(() => {\n    // Initialize Google Analytics if measurement ID is available\n    if (process.env.NEXT_PUBLIC_GA_MEASUREMENT_ID) {\n      const script1 = document.createElement('script')\n      script1.async = true\n      script1.src = `https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GA_MEASUREMENT_ID}`\n      document.head.appendChild(script1)\n\n      const script2 = document.createElement('script')\n      script2.textContent = `\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n        gtag('config', '${process.env.NEXT_PUBLIC_GA_MEASUREMENT_ID}');\n      `\n      document.head.appendChild(script2)\n    }\n  }, [])\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  )\n}","size_bytes":1309},"hooks/use-toast.ts":{"content":"\"use client\"\n\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }","size_bytes":3780},"lib/utils.ts":{"content":"import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}","size_bytes":165},"public/README.md":{"content":"# Static Assets\n\nPlace static assets like images, icons, and other media files here.\n\nFiles in this directory are served at the root of the website.\nFor example: `public/logo.png` → `https://yourdomain.com/logo.png`","size_bytes":217},"app/about/page.tsx":{"content":"import { Metadata } from 'next'\n\nexport const metadata: Metadata = {\n  title: 'About Earl Hickson Jr. - Senior Front-End Engineer',\n  description: 'Learn about Earl Hickson Jr., a Senior Front-End Engineer and Brazilian Jiu-Jitsu black belt based in Parsippany, New Jersey.',\n}\n\nexport default function About() {\n  const skills = [\n    { name: \"JavaScript/TypeScript\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"React/Angular\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"WCAG/Accessibility\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"Design Systems\", level: \"Expert\", color: \"bg-green-100 text-green-700\" },\n    { name: \"Node.js/Express\", level: \"Proficient\", color: \"bg-blue-100 text-blue-700\" },\n    { name: \"GraphQL\", level: \"Familiar\", color: \"bg-yellow-100 text-yellow-700\" },\n    { name: \"Python\", level: \"Familiar\", color: \"bg-yellow-100 text-yellow-700\" }\n  ]\n\n  const bjjLessons = [\n    {\n      title: \"Calm Under Pressure\",\n      description: \"BJJ teaches you to breathe and think clearly in stressful situations—the same mindset I apply when debugging critical production issues or handling tight deadlines.\"\n    },\n    {\n      title: \"Iterative Improvement\",\n      description: \"Every roll is a chance to refine technique. Similarly, every code review and sprint retrospective is an opportunity to enhance our development process.\"\n    },\n    {\n      title: \"Teaching & Mentorship\",\n      description: \"Coaching others on the mat improved my ability to break down complex concepts, give clear feedback, and support junior engineers' growth.\"\n    }\n  ]\n\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-gradient-to-br from-gray-50 to-blue-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\" data-testid=\"page-title\">About Earl</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Engineer, designer, Brazilian Jiu-Jitsu black belt, and lifelong learner based in Parsippany, New Jersey\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Content */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 mb-16\">\n            <div>\n              <h2 className=\"text-3xl font-bold mb-6\" data-testid=\"section-title-technical\">Technical Background</h2>\n              <p className=\"text-gray-700 mb-6\" data-testid=\"bio-technical\">\n                I'm a Front-End Engineer and Graphic Designer with a Bachelor of Arts in Graphic Design from Kean University and a Tech Degree in Front-End Web Development from Team Treehouse. I specialize in creating user-friendly, accessible web experiences that balance technical excellence with compelling design.\n              </p>\n              \n              <h3 className=\"text-xl font-semibold mb-4\">Skills Matrix</h3>\n              <div className=\"space-y-3 mb-8\">\n                {skills.map((skill, index) => (\n                  <div key={index} className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium\" data-testid={`skill-name-${index}`}>{skill.name}</span>\n                    <span className={`text-xs px-2 py-1 rounded ${skill.color}`} data-testid={`skill-level-${index}`}>\n                      {skill.level}\n                    </span>\n                  </div>\n                ))}\n              </div>\n\n              <h3 className=\"text-xl font-semibold mb-4\">Development Workflow</h3>\n              <div className=\"text-sm text-gray-600 space-y-2\">\n                <div data-testid=\"workflow-1\">• Tickets → Feature branches → Pull requests → Code reviews</div>\n                <div data-testid=\"workflow-2\">• Test-driven development with Jest and Cypress</div>\n                <div data-testid=\"workflow-3\">• CI/CD pipelines with GitHub Actions and Vercel</div>\n                <div data-testid=\"workflow-4\">• Design collaboration with Figma and Storybook</div>\n              </div>\n            </div>\n\n            <div>\n              <h2 className=\"text-3xl font-bold mb-6\" data-testid=\"section-title-bjj\">The BJJ Connection</h2>\n              <p className=\"text-gray-700 mb-6\">\n                Brazilian Jiu-Jitsu isn't just a hobby—it's shaped how I approach engineering challenges. \n                The principles of leverage, timing, and continuous improvement translate directly to writing clean, efficient code.\n              </p>\n\n              <div className=\"space-y-6\">\n                {bjjLessons.map((lesson, index) => (\n                  <div key={index} className=\"bg-gray-50 rounded-lg p-6\">\n                    <h4 className=\"font-semibold mb-2\" data-testid={`bjj-lesson-title-${index}`}>{lesson.title}</h4>\n                    <p className=\"text-sm text-gray-600\" data-testid={`bjj-lesson-description-${index}`}>\n                      {lesson.description}\n                    </p>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"mt-8 p-6 bg-blue-50 rounded-lg\">\n                <h4 className=\"font-semibold mb-2\">Currently Training</h4>\n                <p className=\"text-sm text-gray-700\">\n                  Black belt in Brazilian Jiu-Jitsu, actively competing and teaching private lessons. \n                  The discipline and problem-solving skills from BJJ directly enhance my engineering work.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":5741},"app/blog/page.tsx":{"content":"import { Metadata } from 'next'\nimport Link from 'next/link'\n\nexport const metadata: Metadata = {\n  title: 'Blog - Earl Hickson Jr.',\n  description: 'Technical insights and lessons from the mat - combining engineering expertise with Brazilian Jiu-Jitsu philosophy.',\n}\n\nexport default function Blog() {\n  const featuredPost = {\n    title: \"From White Belt to Black Belt: Engineering Lessons from the Mat\",\n    excerpt: \"How the journey through Brazilian Jiu-Jitsu belt ranks mirrors the progression from junior to senior engineer.\",\n    slug: \"white-belt-to-black-belt-engineering-lessons\",\n    category: \"bjj\",\n    readTime: \"8 min read\",\n    date: \"December 2024\"\n  }\n\n  const recentPosts = [\n    {\n      title: \"Component Design Systems That Scale\",\n      excerpt: \"Building maintainable React component libraries with TypeScript and Storybook.\",\n      category: \"development\",\n      readTime: \"12 min read\",\n      status: \"Coming Soon\"\n    },\n    {\n      title: \"WCAG Quick Wins\",\n      excerpt: \"Low-effort, high-impact accessibility improvements every engineer should implement.\",\n      category: \"accessibility\", \n      readTime: \"6 min read\",\n      status: \"Coming Soon\"\n    },\n    {\n      title: \"Performance Optimization in React\",\n      excerpt: \"Practical strategies for improving Core Web Vitals and user experience.\",\n      category: \"performance\",\n      readTime: \"10 min read\", \n      status: \"Coming Soon\"\n    }\n  ]\n\n  const categoryColors: Record<string, string> = {\n    bjj: \"bg-red-100 text-red-700\",\n    development: \"bg-blue-100 text-blue-700\",\n    accessibility: \"bg-green-100 text-green-700\",\n    performance: \"bg-purple-100 text-purple-700\"\n  }\n\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\" data-testid=\"page-title\">Blog</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Technical insights and lessons from the mat—where engineering expertise meets Brazilian Jiu-Jitsu philosophy\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Post */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-white rounded-xl p-8 shadow-lg\">\n            <div className=\"mb-4\">\n              <div className={`inline-flex items-center px-3 py-1 rounded-full ${categoryColors[featuredPost.category]} text-sm font-medium mb-4`}>\n                {featuredPost.category.toUpperCase()}\n              </div>\n            </div>\n            \n            <h2 className=\"text-3xl font-bold mb-4\" data-testid=\"featured-post-title\">\n              <Link href={`/articles/${featuredPost.slug}`} className=\"hover:text-primary-600 transition-colors\">\n                {featuredPost.title}\n              </Link>\n            </h2>\n            \n            <p className=\"text-gray-600 mb-6 text-lg\" data-testid=\"featured-post-excerpt\">\n              {featuredPost.excerpt}\n            </p>\n            \n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center text-sm text-gray-500\">\n                <span>{featuredPost.readTime}</span>\n                <span className=\"mx-2\">•</span>\n                <span>{featuredPost.date}</span>\n              </div>\n              \n              <Link \n                href={`/articles/${featuredPost.slug}`}\n                className=\"inline-flex items-center text-primary-600 hover:text-primary-700 font-medium\"\n                data-testid=\"featured-post-link\"\n              >\n                Read Article\n                <i className=\"fas fa-arrow-right ml-2\"></i>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Recent Posts */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h2 className=\"text-2xl font-bold mb-8\" data-testid=\"section-title-recent\">Recent Posts</h2>\n          \n          <div className=\"grid md:grid-cols-3 gap-6\">\n            {recentPosts.map((post, index) => (\n              <div key={index} className=\"bg-white rounded-xl p-6 border border-gray-200 hover:shadow-md transition-shadow\">\n                <div className={`inline-flex items-center px-3 py-1 rounded-full ${categoryColors[post.category]} text-sm font-medium mb-4`}>\n                  {post.category.toUpperCase()}\n                </div>\n                \n                <h3 className=\"font-semibold mb-2\" data-testid={`post-title-${index}`}>\n                  {post.title}\n                </h3>\n                \n                <p className=\"text-sm text-gray-600 mb-3\" data-testid={`post-excerpt-${index}`}>\n                  {post.excerpt}\n                </p>\n                \n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-xs text-gray-500\">{post.readTime}</span>\n                  <span className=\"text-xs text-orange-500 font-medium\">{post.status}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter CTA */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"bg-white rounded-xl p-8 shadow-lg\">\n            <h2 className=\"text-2xl font-bold mb-4\">Stay Updated</h2>\n            <p className=\"text-gray-600 mb-6\">\n              Get notified when I publish new articles about front-end engineering, Brazilian Jiu-Jitsu, and the intersection of both.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto\">\n              <input \n                type=\"email\" \n                placeholder=\"Enter your email\"\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                data-testid=\"newsletter-email\"\n              />\n              <button className=\"px-6 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors\">\n                Subscribe\n              </button>\n            </div>\n            <p className=\"text-xs text-gray-500 mt-3\">No spam, unsubscribe anytime.</p>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":6534},"app/case-studies/page.tsx":{"content":"import { Metadata } from 'next'\n\nexport const metadata: Metadata = {\n  title: 'Front-End Case Studies - Earl Hickson Jr.',\n  description: 'Real projects, measurable results, production code. How I solve complex front-end challenges with modern frameworks, accessibility standards, and performance optimization.',\n}\n\nexport default function CaseStudies() {\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\" data-testid=\"page-title\">Front-End Case Studies</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Real projects, measurable results, production code. Here's how I solve complex front-end challenges \n              with modern frameworks, accessibility standards, and performance optimization.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Coming Soon */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"bg-white rounded-xl p-12 shadow-lg\">\n            <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <i className=\"fas fa-rocket text-blue-600 text-2xl\"></i>\n            </div>\n            <h2 className=\"text-2xl font-bold mb-4\">Case Studies Coming Soon</h2>\n            <p className=\"text-gray-600 mb-8 max-w-2xl mx-auto\">\n              I'm currently documenting detailed case studies of recent projects, including performance optimizations, \n              accessibility improvements, and technical architecture decisions. Check back soon!\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <a \n                href=\"/api/resume\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center px-6 py-3 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors\"\n              >\n                <i className=\"fas fa-download mr-2\"></i>\n                Download Resume\n              </a>\n              <a \n                href=\"https://github.com/EHickson-Jr\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n              >\n                <i className=\"fab fa-github mr-2\"></i>\n                View GitHub\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":2788},"app/contact/page.tsx":{"content":"import { Metadata } from 'next'\n\nexport const metadata: Metadata = {\n  title: 'Contact - Earl Hickson Jr.',\n  description: 'Get in touch with Earl Hickson Jr. for senior front-end engineering opportunities or Brazilian Jiu-Jitsu lessons.',\n}\n\nexport default function Contact() {\n  return (\n    <div className=\"pt-16\">\n      {/* Header */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\" data-testid=\"page-title\">Get In Touch</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Ready to discuss engineering opportunities or Brazilian Jiu-Jitsu lessons? Let's connect.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Options */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {/* Professional Contact */}\n            <div className=\"bg-white rounded-xl p-8 shadow-lg\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-6\">\n                <i className=\"fas fa-briefcase text-blue-600 text-xl\"></i>\n              </div>\n              <h2 className=\"text-2xl font-bold mb-4\">Engineering Opportunities</h2>\n              <p className=\"text-gray-600 mb-6\">\n                Interested in discussing senior front-end engineering roles, consulting projects, or technical collaborations?\n              </p>\n              <a \n                href=\"mailto:e@ehicksonjr.com?subject=Engineering Opportunity\"\n                className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                <i className=\"fas fa-envelope mr-2\"></i>\n                Email for Engineering\n              </a>\n            </div>\n\n            {/* BJJ Contact */}\n            <div className=\"bg-white rounded-xl p-8 shadow-lg\">\n              <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mb-6\">\n                <i className=\"fas fa-fist-raised text-red-600 text-xl\"></i>\n              </div>\n              <h2 className=\"text-2xl font-bold mb-4\">BJJ Private Lessons</h2>\n              <p className=\"text-gray-600 mb-6\">\n                Want to learn Brazilian Jiu-Jitsu or book private lessons? Let's talk about your training goals.\n              </p>\n              <a \n                href=\"mailto:e@ehicksonjr.com?subject=BJJ Private Lesson Inquiry\"\n                className=\"inline-flex items-center px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n              >\n                <i className=\"fas fa-envelope mr-2\"></i>\n                Email for BJJ Lessons\n              </a>\n            </div>\n          </div>\n\n          {/* Contact Info */}\n          <div className=\"mt-16 text-center\">\n            <h3 className=\"text-xl font-semibold mb-6\">Other Ways to Connect</h3>\n            <div className=\"flex flex-col sm:flex-row gap-6 justify-center\">\n              <a \n                href=\"https://linkedin.com/in/earlhicksonjr\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center text-gray-600 hover:text-blue-600 transition-colors\"\n              >\n                <i className=\"fab fa-linkedin mr-2\"></i>\n                LinkedIn\n              </a>\n              <a \n                href=\"https://github.com/EHickson-Jr\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center text-gray-600 hover:text-gray-900 transition-colors\"\n              >\n                <i className=\"fab fa-github mr-2\"></i>\n                GitHub\n              </a>\n              <span className=\"inline-flex items-center text-gray-600\">\n                <i className=\"fas fa-map-marker-alt mr-2\"></i>\n                Parsippany, New Jersey\n              </span>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":4209},"app/earldkaiju/page.tsx":{"content":"import { Metadata } from 'next'\nimport Image from 'next/image'\n\nexport const metadata: Metadata = {\n  title: 'Brazilian Jiu-Jitsu Private Lessons - Earl Hickson Jr.',\n  description: 'Learn Brazilian Jiu-Jitsu from a black belt instructor. Private lessons focused on fundamental techniques, self-defense, and competition preparation.',\n}\n\nexport default function EarldKaiju() {\n  return (\n    <div className=\"pt-16\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-red-50 via-white to-orange-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-red-100 text-red-700 text-sm font-medium mb-6\">\n                <i className=\"fas fa-medal mr-2\"></i>\n                Brazilian Jiu-Jitsu Black Belt\n              </div>\n              \n              <h1 className=\"text-4xl lg:text-5xl font-bold leading-tight mb-6\">\n                <span className=\"text-gray-900\">Private BJJ Lessons</span>\n                <span className=\"block text-gray-700\">with Earl Hickson Jr.</span>\n              </h1>\n              \n              <p className=\"text-xl text-gray-600 mb-8 leading-relaxed\">\n                Learn Brazilian Jiu-Jitsu from an experienced black belt instructor. \n                Personalized training focused on fundamental techniques, self-defense, and your specific goals.\n              </p>\n\n              <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n                <a \n                  href=\"#booking\"\n                  className=\"inline-flex items-center justify-center px-8 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium\"\n                >\n                  <i className=\"fas fa-calendar-check mr-2\"></i>\n                  Book a Session\n                </a>\n                <a \n                  href=\"#about\"\n                  className=\"inline-flex items-center justify-center px-8 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  <i className=\"fas fa-user mr-2\"></i>\n                  About the Instructor\n                </a>\n              </div>\n\n              {/* Quick Stats */}\n              <div className=\"grid grid-cols-3 gap-4 pt-8 border-t border-gray-200\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">Black Belt</div>\n                  <div className=\"text-sm text-gray-600\">Brazilian Jiu-Jitsu</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">8+ Years</div>\n                  <div className=\"text-sm text-gray-600\">Training Experience</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">Private</div>\n                  <div className=\"text-sm text-gray-600\">One-on-One Focus</div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gray-200 rounded-3xl h-96 flex items-center justify-center\">\n                <div className=\"text-center text-gray-500\">\n                  <i className=\"fas fa-fist-raised text-6xl mb-4\"></i>\n                  <p>BJJ Training Image</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* What You'll Learn */}\n      <section className=\"py-20 bg-white\" id=\"curriculum\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-4\">What You'll Learn</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Comprehensive Brazilian Jiu-Jitsu instruction tailored to your skill level and goals\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <div className=\"bg-gray-50 rounded-xl p-6\">\n              <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mb-4\">\n                <i className=\"fas fa-shield-alt text-red-600 text-xl\"></i>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Fundamental Positions</h3>\n              <p className=\"text-gray-600\">\n                Master the basic positions: guard, mount, side control, back control, and transitions between them.\n              </p>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-xl p-6\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4\">\n                <i className=\"fas fa-fist-raised text-blue-600 text-xl\"></i>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Submission Techniques</h3>\n              <p className=\"text-gray-600\">\n                Learn effective submissions including chokes, joint locks, and when to apply them safely.\n              </p>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-xl p-6\">\n              <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4\">\n                <i className=\"fas fa-running text-green-600 text-xl\"></i>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Self-Defense</h3>\n              <p className=\"text-gray-600\">\n                Practical self-defense techniques for real-world situations, emphasizing leverage over strength.\n              </p>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-xl p-6\">\n              <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4\">\n                <i className=\"fas fa-brain text-purple-600 text-xl\"></i>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Strategy & Concepts</h3>\n              <p className=\"text-gray-600\">\n                Understand the mental game: timing, pressure, and strategic thinking that makes BJJ effective.\n              </p>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-xl p-6\">\n              <div className=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mb-4\">\n                <i className=\"fas fa-heartbeat text-orange-600 text-xl\"></i>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Conditioning</h3>\n              <p className=\"text-gray-600\">\n                Build functional strength, flexibility, and cardiovascular endurance specific to grappling.\n              </p>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-xl p-6\">\n              <div className=\"w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center mb-4\">\n                <i className=\"fas fa-trophy text-indigo-600 text-xl\"></i>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Competition Prep</h3>\n              <p className=\"text-gray-600\">\n                Prepare for tournaments with sport-specific techniques, rules, and competitive strategies.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* About Instructor */}\n      <section className=\"py-20 bg-gray-50\" id=\"about\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">About Your Instructor</h2>\n              <p className=\"text-gray-700 mb-6\">\n                Earl Hickson Jr. brings a unique perspective to Brazilian Jiu-Jitsu instruction, \n                combining technical precision with the analytical mindset of a Senior Front-End Engineer.\n              </p>\n              \n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-start\">\n                  <i className=\"fas fa-medal text-red-600 mt-1 mr-3\"></i>\n                  <div>\n                    <h4 className=\"font-semibold\">Black Belt Certification</h4>\n                    <p className=\"text-sm text-gray-600\">Awarded after 8+ years of dedicated training and competition</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <i className=\"fas fa-users text-blue-600 mt-1 mr-3\"></i>\n                  <div>\n                    <h4 className=\"font-semibold\">Teaching Experience</h4>\n                    <p className=\"text-sm text-gray-600\">Experienced in breaking down complex techniques for beginners</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <i className=\"fas fa-code text-green-600 mt-1 mr-3\"></i>\n                  <div>\n                    <h4 className=\"font-semibold\">Problem-Solving Approach</h4>\n                    <p className=\"text-sm text-gray-600\">Engineering background brings systematic approach to learning</p>\n                  </div>\n                </div>\n              </div>\n\n              <blockquote className=\"border-l-4 border-red-500 pl-6 italic text-gray-700\">\n                \"BJJ taught me that there's always a solution—you just need to stay calm, \n                analyze the situation, and apply the right technique. The same principles \n                apply whether you're debugging code or escaping a submission.\"\n              </blockquote>\n            </div>\n\n            <div className=\"bg-gray-200 rounded-3xl h-96 flex items-center justify-center\">\n              <div className=\"text-center text-gray-500\">\n                <i className=\"fas fa-user-circle text-6xl mb-4\"></i>\n                <p>Instructor Photo</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Booking Section */}\n      <section className=\"py-20 bg-white\" id=\"booking\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-4\">Book Your Private Session</h2>\n            <p className=\"text-xl text-gray-600\">\n              Ready to start your Brazilian Jiu-Jitsu journey? Schedule a private lesson today.\n            </p>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-xl p-8\">\n            <div className=\"grid md:grid-cols-2 gap-8 mb-8\">\n              <div>\n                <h3 className=\"text-xl font-semibold mb-4\">Session Details</h3>\n                <ul className=\"space-y-3 text-gray-700\">\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-clock text-green-600 mr-3\"></i>\n                    60-90 minute sessions\n                  </li>\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-user text-blue-600 mr-3\"></i>\n                    One-on-one instruction\n                  </li>\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-calendar text-purple-600 mr-3\"></i>\n                    Flexible scheduling\n                  </li>\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-map-marker-alt text-red-600 mr-3\"></i>\n                    Parsippany, NJ area\n                  </li>\n                </ul>\n              </div>\n\n              <div>\n                <h3 className=\"text-xl font-semibold mb-4\">What's Included</h3>\n                <ul className=\"space-y-3 text-gray-700\">\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-check text-green-600 mr-3\"></i>\n                    Personalized curriculum\n                  </li>\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-check text-green-600 mr-3\"></i>\n                    Progress tracking\n                  </li>\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-check text-green-600 mr-3\"></i>\n                    Training notes & homework\n                  </li>\n                  <li className=\"flex items-center\">\n                    <i className=\"fas fa-check text-green-600 mr-3\"></i>\n                    Equipment guidance\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"text-center\">\n              <a \n                href=\"mailto:e@ehicksonjr.com?subject=BJJ Private Lesson Inquiry\"\n                className=\"inline-flex items-center px-8 py-4 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium text-lg\"\n              >\n                <i className=\"fas fa-envelope mr-3\"></i>\n                Contact for Booking\n              </a>\n              <p className=\"text-sm text-gray-500 mt-4\">\n                Or email directly at e@ehicksonjr.com with your experience level and goals\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":13259},"components/layout/footer.tsx":{"content":"import Link from 'next/link'\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid md:grid-cols-4 gap-8\">\n          <div className=\"md:col-span-2\">\n            <h3 className=\"text-xl font-bold mb-4\">Earl Hickson Jr.</h3>\n            <p className=\"text-gray-300 mb-4\">\n              Senior Front-End Engineer specializing in React, JavaScript, UI/UX, and expanding into full-stack development.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a href=\"https://linkedin.com/in/earldkaiju\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <i className=\"fab fa-linkedin text-xl\"></i>\n              </a>\n              <a href=\"https://github.com/earldkaiju\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <i className=\"fab fa-github text-xl\"></i>\n              </a>\n              <a href=\"https://instagram.com/earld.kaiju\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <i className=\"fab fa-instagram text-xl\"></i>\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Navigation</h4>\n            <ul className=\"space-y-2\">\n              <li><Link href=\"/about\" className=\"text-gray-300 hover:text-white transition-colors\">About</Link></li>\n              <li><Link href=\"/case-studies\" className=\"text-gray-300 hover:text-white transition-colors\">Case Studies</Link></li>\n              <li><Link href=\"/blog\" className=\"text-gray-300 hover:text-white transition-colors\">Blog</Link></li>\n              <li><Link href=\"/contact\" className=\"text-gray-300 hover:text-white transition-colors\">Contact</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Services</h4>\n            <ul className=\"space-y-2\">\n              <li><Link href=\"/earldkaiju\" className=\"text-gray-300 hover:text-white transition-colors\">BJJ Lessons</Link></li>\n              <li><a href=\"/api/resume\" className=\"text-gray-300 hover:text-white transition-colors\">Resume</a></li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-800 mt-8 pt-8 text-center text-gray-400\">\n          <p>&copy; {new Date().getFullYear()} Earl Hickson Jr. All rights reserved.</p>\n        </div>\n      </div>\n    </footer>\n  )\n}","size_bytes":2541},"components/layout/header.tsx":{"content":"'use client'\n\nimport { useState } from 'react'\nimport Link from 'next/link'\nimport { Button } from '@/components/ui/button'\n\nexport default function Header() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200\">\n      <nav className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"font-bold text-xl text-gray-900\">\n            Earl Hickson Jr.\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <Link href=\"/about\" className=\"text-gray-700 hover:text-gray-900 transition-colors\">\n              About\n            </Link>\n            <Link href=\"/case-studies\" className=\"text-gray-700 hover:text-gray-900 transition-colors\">\n              Case Studies\n            </Link>\n            <Link href=\"/blog\" className=\"text-gray-700 hover:text-gray-900 transition-colors\">\n              Blog\n            </Link>\n            <Link href=\"/earldkaiju\" className=\"text-gray-700 hover:text-gray-900 transition-colors\">\n              BJJ Lessons\n            </Link>\n            <Button asChild size=\"sm\">\n              <Link href=\"/contact\">Contact</Link>\n            </Button>\n          </div>\n\n          {/* Mobile menu button */}\n          <button\n            onClick={() => setIsOpen(!isOpen)}\n            className=\"md:hidden p-2 rounded-md text-gray-700 hover:text-gray-900 hover:bg-gray-100\"\n          >\n            <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              {isOpen ? (\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              ) : (\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              )}\n            </svg>\n          </button>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isOpen && (\n          <div className=\"md:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t border-gray-200\">\n              <Link\n                href=\"/about\"\n                className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                onClick={() => setIsOpen(false)}\n              >\n                About\n              </Link>\n              <Link\n                href=\"/case-studies\"\n                className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                onClick={() => setIsOpen(false)}\n              >\n                Case Studies\n              </Link>\n              <Link\n                href=\"/blog\"\n                className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                onClick={() => setIsOpen(false)}\n              >\n                Blog\n              </Link>\n              <Link\n                href=\"/earldkaiju\"\n                className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                onClick={() => setIsOpen(false)}\n              >\n                BJJ Lessons\n              </Link>\n              <Link\n                href=\"/contact\"\n                className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                onClick={() => setIsOpen(false)}\n              >\n                Contact\n              </Link>\n            </div>\n          </div>\n        )}\n      </nav>\n    </header>\n  )\n}","size_bytes":3783},"components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","size_bytes":1833},"components/ui/input.tsx":{"content":"import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }","size_bytes":822},"components/ui/tech-badge.tsx":{"content":"interface TechBadgeProps {\n  name: string\n  color: 'blue' | 'yellow' | 'orange' | 'purple' | 'green' | 'gray'\n}\n\nconst colorClasses = {\n  blue: 'bg-blue-100 text-blue-800 border-blue-200',\n  yellow: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n  orange: 'bg-orange-100 text-orange-800 border-orange-200',\n  purple: 'bg-purple-100 text-purple-800 border-purple-200',\n  green: 'bg-green-100 text-green-800 border-green-200',\n  gray: 'bg-gray-100 text-gray-800 border-gray-200'\n}\n\nexport default function TechBadge({ name, color }: TechBadgeProps) {\n  return (\n    <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium border ${colorClasses[color]}`}>\n      {name}\n    </span>\n  )\n}","size_bytes":717},"components/ui/textarea.tsx":{"content":"import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }","size_bytes":770},"components/ui/toast.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}","size_bytes":4851},"components/ui/toaster.tsx":{"content":"\"use client\"\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/hooks/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}","size_bytes":785},"components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }","size_bytes":1157},"app/api/resume/route.ts":{"content":"import { NextRequest, NextResponse } from 'next/server'\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Return a placeholder response for now\n    // In production, this would serve the actual PDF file\n    return new NextResponse(\n      JSON.stringify({ \n        message: 'Resume download endpoint - PDF would be served here',\n        url: '/resume.pdf'\n      }),\n      {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    )\n  } catch (error) {\n    return new NextResponse(\n      JSON.stringify({ error: 'Failed to serve resume' }),\n      {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    )\n  }\n}","size_bytes":732},"app/articles/[slug]/page.tsx":{"content":"import { Metadata } from 'next'\nimport Link from 'next/link'\nimport { Button } from '@/components/ui/button'\nimport { notFound } from 'next/navigation'\n\n// Mock data for the blog post\nconst blogPosts = [\n  {\n    slug: \"white-belt-to-black-belt-engineering-lessons\",\n    title: \"From White Belt to Black Belt: Engineering Lessons from the Mat\",\n    content: `\n# From White Belt to Black Belt: Engineering Lessons from the Mat\n\nBrazilian Jiu-Jitsu has fundamentally shaped how I approach software engineering. The parallels between progressing through belt ranks and advancing as an engineer are striking and instructive.\n\n## The White Belt Mindset: Embracing the Unknown\n\nWhen I first stepped onto the mat, everything felt overwhelming. Simple movements were difficult, and I had no idea what I was doing. This mirrors exactly how I felt when I wrote my first lines of JavaScript.\n\n**Engineering Parallel**: Junior developers often feel lost in large codebases. The key is accepting that confusion is temporary and focusing on fundamentals.\n\n## Blue Belt: Building Fundamentals\n\nAt blue belt, you start to understand basic positions and transitions. You're no longer just surviving—you're beginning to think strategically.\n\n**Engineering Parallel**: Mid-level engineers start to see patterns in code architecture and understand how different parts of an application work together.\n\n## Purple Belt: Teaching and Leadership\n\nPurple belts often start teaching newer students. This requires breaking down complex techniques into digestible pieces.\n\n**Engineering Parallel**: Senior engineers must mentor juniors, breaking down complex systems and explaining architectural decisions clearly.\n\n## Brown Belt: Refining and Innovating\n\nBrown belts develop their own style and start to innovate within the traditional framework.\n\n**Engineering Parallel**: Staff engineers begin to shape technical direction and create new solutions while respecting established patterns.\n\n## Black Belt: Mastery and Continuous Learning\n\nThe black belt isn't the end—it's the beginning of true understanding. You realize how much more there is to learn.\n\n**Engineering Parallel**: Principal engineers understand that technology constantly evolves, and they must remain students throughout their careers.\n\n## Key Lessons Applied Daily\n\n1. **Leverage over strength**: Write elegant code that uses existing patterns rather than brute-forcing solutions\n2. **Pressure and timing**: Know when to push hard on a feature and when to take a step back\n3. **Respect your training partners**: Code reviews are like rolling—help each other improve\n4. **Focus on fundamentals**: Clean code principles matter more than flashy frameworks\n\nThe mat taught me patience, problem-solving, and the value of consistent practice. These lessons make me a better engineer every day.\n    `,\n    category: \"bjj\",\n    readTime: \"8 min read\",\n    date: \"December 2024\",\n    excerpt: \"How the journey through Brazilian Jiu-Jitsu belt ranks mirrors the progression from junior to senior engineer.\"\n  }\n]\n\nconst categoryColors: Record<string, string> = {\n  bjj: \"bg-red-100 text-red-700\",\n  development: \"bg-blue-100 text-blue-700\",\n  accessibility: \"bg-green-100 text-green-700\",\n  performance: \"bg-purple-100 text-purple-700\"\n}\n\ninterface Props {\n  params: {\n    slug: string\n  }\n}\n\nexport function generateMetadata({ params }: Props): Metadata {\n  const post = blogPosts.find(p => p.slug === params.slug)\n  \n  if (!post) {\n    return {\n      title: 'Article Not Found',\n    }\n  }\n\n  return {\n    title: `${post.title} - Earl Hickson Jr.`,\n    description: post.excerpt,\n  }\n}\n\nexport default function Article({ params }: Props) {\n  const post = blogPosts.find(p => p.slug === params.slug)\n\n  if (!post) {\n    notFound()\n  }\n\n  return (\n    <div className=\"pt-16\">\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"mb-8\">\n            <Button variant=\"ghost\" asChild className=\"mb-6\" data-testid=\"button-back\">\n              <Link href=\"/blog\">\n                <i className=\"fas fa-arrow-left mr-2\"></i>\n                Back to Blog\n              </Link>\n            </Button>\n            \n            <div className={`inline-flex items-center px-3 py-1 rounded-full ${categoryColors[post.category]} text-sm font-medium mb-4`}>\n              {post.category.toUpperCase()}\n            </div>\n            \n            <h1 className=\"text-4xl font-bold mb-4\" data-testid=\"article-title\">\n              {post.title}\n            </h1>\n            \n            <div className=\"flex items-center text-gray-500 text-sm mb-8\">\n              <span>{post.readTime}</span>\n              <span className=\"mx-2\">•</span>\n              <span>{post.date}</span>\n            </div>\n          </div>\n\n          <article className=\"prose prose-lg max-w-none\" data-testid=\"article-content\">\n            <div dangerouslySetInnerHTML={{ __html: post.content.replace(/\\n/g, '<br>') }} />\n          </article>\n\n          <div className=\"mt-16 pt-8 border-t border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <Button variant=\"outline\" asChild data-testid=\"button-back-bottom\">\n                <Link href=\"/blog\">\n                  <i className=\"fas fa-arrow-left mr-2\"></i>\n                  Back to Blog\n                </Link>\n              </Button>\n              \n              <div className=\"flex items-center space-x-4\">\n                <span className=\"text-sm text-gray-500\">Share this article:</span>\n                <a \n                  href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post.title)}&url=${encodeURIComponent(window.location.href)}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-blue-500 hover:text-blue-600\"\n                >\n                  <i className=\"fab fa-twitter\"></i>\n                </a>\n                <a \n                  href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(window.location.href)}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-blue-700 hover:text-blue-800\"\n                >\n                  <i className=\"fab fa-linkedin\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":6447}}}